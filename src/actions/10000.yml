type: 10000
name: GPUStandardParticle
slot: Appearance
desc: |
  An entire particle system in a single action. This emits GPU particles, which means thousands of particles can be rendered without much impact on performance.

  Note that while this emits particles, it is itself not a particle, and the particles emitted by this action are not affected by everything that affects regular particles.

  The name of this action is from Elden Ring's RTTI, where it's called "StandardParticle".
properties:
  unk_ds3_f1_0:
    field: int
    default: 1005
  texture:
    field: int
    default: 1
    resource: texture
    textureType: a
    desc: |
      The ID of the texture of the particles.
  unk_ds3_f1_2:
    field: int
  normalMap:
    field: int
    resource: texture
    textureType: 'n'
  emitterShape:
    type: EmitterShape
    field: int
    default: EmitterShape.Box
    desc: |
      Controls the shape of the particle emitter. See {@link EmitterShape} for more details.
  unk_ds3_f1_5:
    field: int
  emitterSize:
    field: vec3
    default: [1, 1, 1]
    scale: true
    desc: |
      The size of the emitter.
  emitterRotation:
    field: vec3
    default: [0, 0, 0]
    desc: |
      The rotation of the emitter.
  unk_ds3_f1_12:
    field: float
    default: 1
  unk_ds3_f1_13:
    field: float
    default: 1
  unk_ds3_f1_14:
    field: float
    default: 1
  emitterDistribution:
    field: float
    desc: |
      Controls how the random emission points are distributed within the {@link emitterShape shape of the emitter}. How this works depend on the emitter shape:
      | Shape | Behavior |
      |-|-|
      | {@link EmitterShape.Line Line} | A fraction of the line where particles can not be emitted from.<br>At 0, particles can be emitted from any point on the line.<br>At 1, they can only be emitted from the far end of the line. |
      | {@link EmitterShape.Box Box} | A fraction of the box's size where the particles can not be emitted from. Basically an inner box that blocks emission. |
      | {@link EmitterShape.Box2 Box2} | At 1, any point within the box is equally likely to be picked.<br>At 0, particles are more likely to be emitted near the center, but it's not a 100% chance. |
      | {@link EmitterShape.Unk3 Unk3} | Exactly the same as {@link EmitterShape.Line Line}? |
      | {@link EmitterShape.Cylinder Cylinder} | A fraction of the radius of the cylinder where the particles can not be emitted from. Basically an inner cylinder that blocks emission. |
  unk_ds3_f1_16:
    field: float
  unk_ds3_f1_17:
    field: float
  unk_ds3_f1_18:
    field: int
    default: -1
  unk_ds3_f1_19:
    field: int
  unk_ds3_f1_20:
    field: int
  unk_ds3_f1_21:
    field: int
    default: 100
  emissionParticleCount:
    field: int
    default: 10
    desc: |
      The number of particles to emit per emission.
    see:
      - emissionParticleCountMin
      - emissionParticleCountMax
  emissionParticleCountMin:
    field: int
    desc: |
      The minimum number of particles to emit per emission. A new random value is picked for each emission, and the random value is added to the {@link emissionParticleCount base emission particle count}.
    see:
      - emissionParticleCount
      - emissionParticleCountMax
  emissionParticleCountMax:
    field: int
    desc: |
      The maximum number of particles to emit per emission. A new random value is picked for each emission, and the random value is added to the {@link emissionParticleCount base emission particle count}.
    see:
      - emissionParticleCount
      - emissionParticleCountMin
  unk_ds3_f1_25:
    field: int
  emissionIntervalMin:
    field: int
    default: 1
    time: inv
    desc: |
      The minimum time between emissions in seconds. Due to the way this field works, the value will be rounded to the nearest 1/30s.
    see:
      - emissionIntervalMax
  emissionIntervalMax:
    field: int
    default: 1
    time: inv
    desc: |
      The maximum time between emissions in seconds. Due to the way this field works, the value will be rounded to the nearest 1/30s.
    see:
      - emissionIntervalMin
  limitEmissionCount:
    field: bool
    default: false
    desc: |
      If enabled, the number of emissions will be limited by {@link emissionCountLimit}.
  emissionCountLimit:
    field: int
    desc: |
      The total number of emissions. This limit is only applied if {@link limitEmissionCount} is enabled.
  unk_ds3_f1_30:
    field: int
  particleDuration:
    field: int
    default: 1
    time: inv
    desc: |
      The duration of each particle in seconds. Due to the way this field works, the value will be rounded to the nearest 1/30s.
  unk_ds3_f1_32:
    field: int
  unk_ds3_f1_33:
    field: int
  particleOffsetX:
    field: float
    scale: true
    desc: |
      Particle position offset along the X-axis.
    see:
      - particleOffsetXMin
      - particleOffsetXMax
  particleOffsetY:
    field: float
    scale: true
    desc: |
      Particle position offset along the Y-axis.
    see:
      - particleOffsetYMin
      - particleOffsetYMax
  particleOffsetZ:
    field: float
    scale: true
    desc: |
      Particle position offset along the Z-axis.
    see:
      - particleOffsetZMin
      - particleOffsetZMax
  particleOffsetXMin:
    field: float
    scale: true
    desc: |
      Minimum particle position offset along the X-axis. A random value between this and {@link particleOffsetXMax} will be added to {@link particleOffsetX} to get the final position offset.
  particleOffsetYMin:
    field: float
    scale: true
    desc: |
      Minimum particle position offset along the Y-axis. A random value between this and {@link particleOffsetYMax} will be added to {@link particleOffsetY} to get the final position offset.
  particleOffsetZMin:
    field: float
    scale: true
    desc: |
      Minimum particle position offset along the Z-axis. A random value between this and {@link particleOffsetZMax} will be added to {@link particleOffsetZ} to get the final position offset.
  particleOffsetXMax:
    field: float
    scale: true
    desc: |
      Maximum particle position offset along the X-axis. A random value between this and {@link particleOffsetXMin} will be added to {@link particleOffsetX} to get the final position offset.
  particleOffsetYMax:
    field: float
    scale: true
    desc: |
      Maximum particle position offset along the Y-axis. A random value between this and {@link particleOffsetYMin} will be added to {@link particleOffsetY} to get the final position offset.
  particleOffsetZMax:
    field: float
    scale: true
    desc: |
      Maximum particle position offset along the Z-axis. A random value between this and {@link particleOffsetZMin} will be added to {@link particleOffsetZ} to get the final position offset.
  particleSpeedX:
    field: float
    scale: true
    time: true
    desc: |
      Particle speed along the X-axis.
    see:
      - particleSpeedXMin
      - particleSpeedXMax
  particleSpeedY:
    field: float
    scale: true
    time: true
    desc: |
      Particle speed along the Y-axis.
    see:
      - particleSpeedYMin
      - particleSpeedYMax
  particleSpeedZ:
    field: float
    scale: true
    time: true
    desc: |
      Particle speed along the Z-axis.
    see:
      - particleSpeedZMin
      - particleSpeedZMax
  particleSpeedXMin:
    field: float
    scale: true
    time: true
    desc: |
      Minimum particle speed along the X-axis. A random value between this and {@link particleSpeedXMax} will be added to {@link particleSpeedX} to get the final speed.
  particleSpeedYMin:
    field: float
    scale: true
    time: true
    desc: |
      Minimum particle speed along the Y-axis. A random value between this and {@link particleSpeedYMax} will be added to {@link particleSpeedY} to get the final speed.
  particleSpeedZMin:
    field: float
    scale: true
    time: true
    desc: |
      Minimum particle speed along the Z-axis. A random value between this and {@link particleSpeedZMax} will be added to {@link particleSpeedZ} to get the final speed.
  particleSpeedXMax:
    field: float
    scale: true
    time: true
    desc: |
      Maximum particle speed along the X-axis. A random value between this and {@link particleSpeedXMin} will be added to {@link particleSpeedX} to get the final speed.
  particleSpeedYMax:
    field: float
    scale: true
    time: true
    desc: |
      Maximum particle speed along the Y-axis. A random value between this and {@link particleSpeedYMin} will be added to {@link particleSpeedY} to get the final speed.
  particleSpeedZMax:
    field: float
    scale: true
    time: true
    desc: |
      Maximum particle speed along the Z-axis. A random value between this and {@link particleSpeedZMin} will be added to {@link particleSpeedZ} to get the final speed.
  particleAccelerationXMin:
    field: float
    scale: true
    time: sq
    desc: |
      Minimum particle acceleration along the X-axis. A random value between this and {@link particleAccelerationXMax} will be added to {@link particleAccelerationX} to get the final acceleration.
  particleAccelerationYMin:
    field: float
    scale: true
    time: sq
    desc: |
      Minimum particle acceleration along the Y-axis. A random value between this and {@link particleAccelerationYMax} will be added to {@link particleAccelerationY} to get the final acceleration.
  particleAccelerationZMin:
    field: float
    scale: true
    time: sq
    desc: |
      Minimum particle acceleration along the Z-axis. A random value between this and {@link particleAccelerationZMax} will be added to {@link particleAccelerationZ} to get the final acceleration.
  particleAccelerationXMax:
    field: float
    scale: true
    time: sq
    desc: |
      Maximum particle acceleration along the X-axis. A random value between this and {@link particleAccelerationXMin} will be added to {@link particleAccelerationX} to get the final acceleration.
  particleAccelerationYMax:
    field: float
    scale: true
    time: sq
    desc: |
      Maximum particle acceleration along the Y-axis. A random value between this and {@link particleAccelerationYMin} will be added to {@link particleAccelerationY} to get the final acceleration.
  particleAccelerationZMax:
    field: float
    scale: true
    time: sq
    desc: |
      Maximum particle acceleration along the Z-axis. A random value between this and {@link particleAccelerationZMin} will be added to {@link particleAccelerationZ} to get the final acceleration.
  particleRotationVarianceX:
    field: float
    desc: |
      Maximum amount of random rotation each particle will have around the X-axis in degrees.
  particleRotationVarianceY:
    field: float
    desc: |
      Maximum amount of random rotation each particle will have around the Y-axis in degrees.
  particleRotationVarianceZ:
    field: float
    desc: |
      Maximum amount of random rotation each particle will have around the Z-axis in degrees.
  particleAngularSpeedVarianceX:
    field: float
    time: true
    desc: |
      Maximum amount of random angular speed each particle will have around the X-axis in degrees per second.
  particleAngularSpeedVarianceY:
    field: float
    time: true
    desc: |
      Maximum amount of random angular speed each particle will have around the Y-axis in degrees per second.
  particleAngularSpeedVarianceZ:
    field: float
    time: true
    desc: |
      Maximum amount of random angular speed each particle will have around the Z-axis in degrees per second.
  particleAngularAccelerationXMin:
    field: float
    time: sq
    desc: |
      Minimum amount of random angular acceleration each particle will have around the X-axis in degrees per second squared.
    see:
      - particleAngularAccelerationXMax
  particleAngularAccelerationYMin:
    field: float
    time: sq
    desc: |
      Minimum amount of random angular acceleration each particle will have around the Y-axis in degrees per second squared.
    see:
      - particleAngularAccelerationYMax
  particleAngularAccelerationZMin:
    field: float
    time: sq
    desc: |
      Minimum amount of random angular acceleration each particle will have around the Z-axis in degrees per second squared.
    see:
      - particleAngularAccelerationZMax
  particleAngularAccelerationXMax:
    field: float
    time: sq
    desc: |
      Maximum amount of random angular acceleration each particle will have around the X-axis in degrees per second squared.
    see:
      - particleAngularAccelerationXMin
  particleAngularAccelerationYMax:
    field: float
    time: sq
    desc: |
      Maximum amount of random angular acceleration each particle will have around the Y-axis in degrees per second squared.
    see:
      - particleAngularAccelerationYMin
  particleAngularAccelerationZMax:
    field: float
    time: sq
    desc: |
      Maximum amount of random angular acceleration each particle will have around the Z-axis in degrees per second squared.
    see:
      - particleAngularAccelerationZMin
  particleUniformScale:
    field: bool
    default: false
    desc: |
      When enabled, the height of the particles will be based on the {@link particleSizeX width} instead of the {@link particleSizeY height field}, and the height field is ignored.
    see:
      - particleSizeX
      - particleSizeY
      - particleSizeXMin
      - particleSizeYMin
      - particleSizeXMax
      - particleSizeYMax
      - particleGrowthRateX
      - particleGrowthRateY
      - particleGrowthRateXStatic
      - particleGrowthRateYStatic
      - particleGrowthAccelerationXMin
      - particleGrowthAccelerationYMin
      - particleGrowthAccelerationXMax
      - particleGrowthAccelerationYMax
  particleSizeX:
    field: float
    default: 1
    scale: true
    desc: |
      The width of the particle.
  particleSizeY:
    field: float
    default: 1
    scale: true
    desc: |
      The height of the particle.
  unk_ds3_f1_73:
    field: float
    default: 1
  particleSizeXMin:
    field: float
    scale: true
    desc: |
      The minimum width of the particle. A random value between this and {@link particleSizeXMin} will be added to {@link particleSizeX} to get the final width.
  particleSizeYMin:
    field: float
    scale: true
    desc: |
      The minimum height of the particle. A random value between this and {@link particleSizeYMin} will be added to {@link particleSizeY} to get the final height.
  unk_ds3_f1_76:
    field: float
  particleSizeXMax:
    field: float
    scale: true
    desc: |
      The maximum width of the particle. A random value between this and {@link particleSizeXMax} will be added to {@link particleSizeX} to get the final width.
  particleSizeYMax:
    field: float
    scale: true
    desc: |
      The maximum height of the particle. A random value between this and {@link particleSizeYMax} will be added to {@link particleSizeY} to get the final height.
  unk_ds3_f1_79:
    field: float
  particleGrowthRateXStatic:
    field: float
    scale: true
    time: true
    desc: |
      The rate of change for the width of the particles.
    see:
      - particleGrowthRateX
  particleGrowthRateYStatic:
    field: float
    scale: true
    time: true
    desc: |
      The rate of change for the height of the particles.
    see:
      - particleGrowthRateY
  unk_ds3_f1_82:
    field: float
  particleGrowthRateXMin:
    field: float
    scale: true
    time: true
    desc: |
      Minimum rate of change for the width of the particles. A random value between this and {@link particleGrowthRateXMax} will be added to {@link particleGrowthRateX} and {@link particleGrowthRateXStatic} to get the final growth rate.
  particleGrowthRateYMin:
    field: float
    scale: true
    time: true
    desc: |
      Minimum rate of change for the height of the particles. A random value between this and {@link particleGrowthRateYMax} will be added to {@link particleGrowthRateY} and {@link particleGrowthRateYStatic} to get the final growth rate.
  unk_ds3_f1_85:
    field: float
  particleGrowthRateXMax:
    field: float
    scale: true
    time: true
    desc: |
      Maximum rate of change for the width of the particles. A random value between this and {@link particleGrowthRateXMax} will be added to {@link particleGrowthRateX} and {@link particleGrowthRateXStatic} to get the final growth rate.
  particleGrowthRateYMax:
    field: float
    scale: true
    time: true
    desc: |
      Maximum rate of change for the height of the particles. A random value between this and {@link particleGrowthRateYMax} will be added to {@link particleGrowthRateY} and {@link particleGrowthRateYStatic} to get the final growth rate.
  unk_ds3_f1_88:
    field: float
  particleGrowthAccelerationXMin:
    field: float
    scale: true
    time: sq
    desc: |
      Minimum acceleration of change for the width of the particles. A random value between this and {@link particleGrowthAccelerationXMax} will be the final growth acceleration.
  particleGrowthAccelerationYMin:
    field: float
    scale: true
    time: sq
    desc: |
      Minimum acceleration of change for the height of the particles. A random value between this and {@link particleGrowthAccelerationYMax} will be the final growth acceleration.
  unk_ds3_f1_91:
    field: float
  particleGrowthAccelerationXMax:
    field: float
    scale: true
    time: sq
    desc: |
      Minimum acceleration of change for the width of the particles. A random value between this and {@link particleGrowthAccelerationXMin} will be the final growth acceleration.
  particleGrowthAccelerationYMax:
    field: float
    scale: true
    time: sq
    desc: |
      Minimum acceleration of change for the height of the particles. A random value between this and {@link particleGrowthAccelerationYMin} will be the final growth acceleration.
  unk_ds3_f1_94:
    field: float
  rgbMultiplier:
    field: float
    default: 1
    desc: |
      Scalar multiplier for the color that does not affect the alpha. Effectively a brightness multiplier.
  alphaMultiplier:
    field: float
    default: 1
    desc: |
      Alpha multiplier.
  colorMin:
    field: vec4
    default: [0, 0, 0, 0]
    desc: |
      Minimum random variation for the particle color. A random value between this and {@link colorMax} will be added to the base {@link color}, but it fades out over the life of the particle.
  colorMax:
    field: vec4
    default: [0, 0, 0, 0]
    desc: |
      Maximum random variation for the particle color. A random value between this and {@link colorMin} will be added to the base {@link color}, but it fades out over the life of the particle.
  blendMode:
    type: BlendMode
    field: int
    default: BlendMode.Normal
    desc: |
      Blend mode.
  columns:
    field: int
    default: 1
    desc: |
      To split the texture into multiple animation frames, this value must be set to the number of columns in the texture. It should equal `textureWidth / frameWidth`.
    see:
      - totalFrames
  totalFrames:
    field: int
    default: 1
    desc: |
      To split the texture into multiple animation frames, this value must be set to the total number of frames in the texture.
    see:
      - columns
  randomTextureFrame:
    field: bool
    default: false
    desc: |
      When enabled, this makes each particle pick a random frame from the animation and only display that one frame.
    see:
      - columns
      - totalFrames
      - maxFrameIndex
  unk_ds3_f1_109:
    field: int
  maxFrameIndex:
    field: int
    desc: |
      Controls the maximum frame index when {@link randomTextureFrame picking a random frame to display}.
    see:
      - randomTextureFrame
  unk_ds3_f1_111:
    field: int
    default: -1
  unk_ds3_f1_112:
    field: int
    default: -1
  unk_ds3_f1_113:
    field: int
  unk_ds3_f1_114:
    field: int
    default: 1
  unk_ds3_f1_115:
    field: int
  unk_ds3_f1_116:
    field: int
  unk_ds3_f1_117:
    field: float
    default: 1
  unk_ds3_f1_118:
    field: float
    default: 1
  particleDurationMultiplier:
    field: float
    default: 1
    desc: |
      Multiplier for {@link particleDuration}.
  unk_ds3_f1_120:
    field: float
    default: 1
  particleSizeMultiplier:
    field: float
    default: 1
    desc: |
      Scalar multiplier for the size of the particles.
  unk_ds3_f1_122:
    field: float
    default: 1
  unk_ds3_f1_123:
    field: float
    default: 1
  unk_ds3_f1_124:
    field: float
    default: 1
  unk_ds3_f1_125:
    field: float
    default: 1
  unk_ds3_f1_126:
    field: float
    default: 1
  unk_ds3_f1_127:
    field: int
  unk_ds3_f1_128:
    field: float
    default: 1
  unk_ds3_f1_129:
    field: float
    default: 1
  unk_ds3_f1_130:
    field: float
    default: 1
  unk_ds3_f1_131:
    field: float
    default: 1
  unk_ds3_f1_132:
    field: int
  unk_ds3_f1_133:
    field: int
  unk_ds3_f1_134:
    field: int
  unk_ds3_f1_135:
    field: float
    scale: true
  unk_ds3_f1_136:
    field: float
    scale: true
  unk_ds3_f1_137:
    field: int
  unk_ds3_f1_138:
    field: int
    default: 8
  unk_ds3_f1_139:
    field: float
  unk_ds3_f1_140:
    field: float
  unk_ds3_f1_141:
    field: int
  limitUpdateDistance:
    field: bool
    desc: |
      If enabled, the particle system stops updating if the camera is beyond the distance specified by {@link updateDistance} from the node.

      It will not stop updating immediately after the effect becomes active. Instead, it will wait for a little while before stopping if the camera is too far away.
  updateDistance:
    field: float
    scale: true
    desc: |
      Controls how close the camera needs to be to the node for the particle system to update. Requires {@link limitUpdateDistance} to be enabled.
  particleCollision:
    field: bool
    default: false
    desc: |
      When enabled, this makes the particles bounce off of any surface they hit. This collision detection is just based on the depth buffer, not the full 3D scene, so it is not always perfect.
    see:
      - particleBounciness
  particleBounciness:
    field: float
    desc: |
      Controls how strong the rebound from hitting a surface is when {@link particleCollision} is enabled.
    see:
      - particleCollision
  particleRandomTurns:
    field: bool
    default: false
    desc: |
      If enabled, particles will randomly make sharp turns that affect the direction of various speed and acceleration properties. Both the time between turns and the turn angle are randomized for each turn and for each particle, and they are based on {@link particleRandomTurnIntervalMax} and {@link particleRandomTurnAngle} respectively.
    see:
      - particleRandomTurnIntervalMax
      - particleRandomTurnAngle
  particleRandomTurnIntervalMax:
    field: int
    default: 1
    time: inv
    desc: |
      The maximum amount of time in seconds to wait between making random turns. Requires {@link particleRandomTurns} to be enabled.
    see:
      - particleRandomTurns
      - particleRandomTurnAngle
  traceParticles:
    field: bool
    default: false
    desc: |
      If enabled, this causes the particles to orient themselves and stretch in the direction they are moving on the screen, making them almost resemble {@link ActionType.Tracer Tracer} particles.
    see:
      - particleTraceLength
  unk_ds3_f1_149:
    field: float
    default: 1
  particleTraceLength:
    field: float
    default: 1
    scale: true
    time: inv
    desc: |
      Controls how much the particles are stretched when {@link traceParticles} is enabled.
  traceParticlesThreshold:
    field: float
    desc: |
      A central fraction of the emitter volume where the particles will not be trace particles. In this volume, the particles act as if {@link traceParticles} is disabled.
  traceParticleHead:
    field: bool
    default: false
    desc: |
      If enabled, this will add a billboarding sprite to the leading end of trace particles.
    see:
      - traceParticles
  unk_ds3_f1_153:
    field: int
  unk_ds3_f1_154:
    field: int
  bloom:
    field: bool
    default: false
    desc: |
      Controls whether or not the particles have a bloom effect.
    see:
      - bloomColor
  bloomColor:
    field: vec4
    default: [1, 1, 1, 0]
    color: true
    desc: |
      Controls the color of the additional bloom effect. The colors of the particle will be multiplied with this color to get the final color of the bloom effect.

      Note:
      - This has no effect if the "Effects Quality" setting is set to "Low".
      - This does not affect the natural bloom effect from high color values.
    see:
      - bloom
  desaturate:
    field: float
    desc: |
      Desaturates the particles, making them more grayscale. At 0, the particles will have their regular colors. At 1, they will be entirely grayscale.
  unk_sdt_f1_160:
    field: float
    default: 1
  unk_sdt_f1_161:
    field: int
  unk_sdt_f1_162:
    field: float
    default: 1
  unk_sdt_f1_163:
    field: float
    default: 1
  unk_sdt_f1_164:
    field: float
    default: 1
  unk_sdt_f1_165:
    field: int
  unk_sdt_f1_166:
    field: float
    default: 1
  unk_er_f1_167:
    field: float
    default: 1
  unk_ds3_f2_0:
    field: int
  unk_ds3_f2_1:
    field: int
  unk_ds3_f2_2:
    field: int
    default: 8
  unk_ds3_f2_3:
    field: int
  unk_ds3_f2_4:
    field: int
  unk_ds3_f2_5:
    field: float
    default: 1
  unk_ds3_f2_6:
    field: float
    default: 1
  unk_ds3_f2_7:
    field: float
    default: 1
  unk_ds3_f2_8:
    field: float
    default: 1
  unk_ds3_f2_9:
    field: int
  unk_ds3_f2_10:
    field: int
  unk_ds3_f2_11:
    field: int
  unk_ds3_f2_12:
    field: int
  unk_ds3_f2_13:
    field: int
  minDistance:
    field: float
    default: -1
    scale: ifNotMinusOne
    desc: |
      Minimum view distance. If a particle is closer than this distance from the camera, it will be hidden. Can be set to -1 to disable the limit.

      This requires {@link minFadeDistance} to be set to something other than -1.

      This is different from {@link minDistanceThreshold}, as this controls the start of a distance range that has smooth transitions at each end, while the threshold value is a hard cut-off.
    see:
      - minFadeDistance
      - maxFadeDistance
      - maxDistance
      - minDistanceThreshold
      - maxDistanceThreshold
  minFadeDistance:
    field: float
    default: -1
    scale: ifNotMinusOne
    desc: |
      This controls a point where the opacity of a particle will start to fade to 0 near the {@link minDistance minimum view distance}. At {@link minDistance}, the opacity will be 0, and it will linearly approach 1 as the distance between the camera and the particle approaches this distance.

      This requires {@link minDistance} to be set to something other than -1. This distance limit can be disabled by setting this and minDistance to -1.
    see:
      - minDistance
      - maxFadeDistance
      - maxDistance
      - minDistanceThreshold
      - maxDistanceThreshold
  maxFadeDistance:
    field: float
    default: -1
    scale: ifNotMinusOne
    desc: |
      This controls a point where the opacity of a particle will start to fade to 0 near the {@link maxDistance maximum view distance}. At {@link maxDistance}, the opacity will be 0, and it will linearly approach 1 as the distance between the camera and the particle approaches this distance.

      This requires {@link maxDistance} to be set to something other than -1. This distance limit can be disabled by setting this and minDistance to -1.
    see:
      - minFadeDistance
      - minDistance
      - maxDistance
      - minDistanceThreshold
      - maxDistanceThreshold
  maxDistance:
    field: float
    default: -1
    scale: ifNotMinusOne
    desc: |
      Minimum view distance. If a particle is farther away than this distance from the camera, it will be hidden. Can be set to -1 to disable the limit.

      This requires {@link maxFadeDistance} to be set to something other than -1.

      This is different from {@link maxDistanceThreshold}, as this controls the start of a distance range that has smooth transitions at each end, while the threshold value is a hard cut-off.
    see:
      - minFadeDistance
      - minDistance
      - maxFadeDistance
      - minDistanceThreshold
      - maxDistanceThreshold
  minDistanceThreshold:
    field: float
    default: -1
    scale: ifNotMinusOne
    desc: |
      A hard cut-off point for the distance between the camera and the particle. If a particle is closer than this distance from the camera, it will be hidden. Can be set to -1 to disable the limit.
    see:
      - minFadeDistance
      - minDistance
      - maxFadeDistance
      - maxDistance
      - maxDistanceThreshold
  maxDistanceThreshold:
    field: float
    default: -1
    scale: ifNotMinusOne
    desc: |
      A hard cut-off point for the distance between the camera and the particle. If a particle is farther away than this distance from the camera, it will be hidden. Can be set to -1 to disable the limit.
    see:
      - minFadeDistance
      - minDistance
      - maxFadeDistance
      - maxDistance
      - minDistanceThreshold
  unk_ds3_f2_20:
    field: int
  unk_ds3_f2_21:
    field: int
  unk_ds3_f2_22:
    field: int
  unk_ds3_f2_23:
    field: int
  unk_ds3_f2_24:
    field: int
  unkDepthBlend1:
    field: float
    default: 1
  unkDepthBlend2:
    field: float
    scale: true
  unk_ds3_f2_27:
    field: int
    default: 1
  unk_ds3_f2_28:
    field: int
  unk_sdt_f2_29:
    field: float
  shadowDarkness:
    field: float
    desc: |
      Controls how dark shaded parts of the particle are.
  unkHideIndoors:
    field: int
    desc: |
      When set to 1, this stops the particles from being shown indoors.

      Other values are used in AC6, but what they do is unknown.
  unk_sdt_f2_32:
    field: int
    default: 1
  specular:
    field: int
    resource: texture
    textureType: 3m
    desc: |
      Specular texture ID.
    see:
      - lighting
      - glossiness
      - specularity
  glossiness:
    field: float
    default: 0.25
    desc: |
      Controls how sharp the specular highlights are.
    see:
      - lighting
      - specular
      - specularity
  lighting:
    type: LightingMode
    field: int
    default: LightingMode.Unlit
  unk_sdt_f2_36:
    field: int
    default: -2
  unk_sdt_f2_37:
    field: int
  specularity:
    field: float
    default: 0.5
    desc: |
      Controls how bright the specular highlights are.
    see:
      - lighting
      - specular
      - glossiness
  unk_er_f2_39:
    field: int
  particleFollowFactor:
    type: ScalarValue
    desc: |
      Controls how well the particles follow the node if it moves.
  unk_ds3_p1_1:
    type: ScalarValue
  unk_ds3_p1_2:
    type: ScalarValue
  unk_ds3_p1_3:
    type: ScalarValue
  particleAccelerationX:
    type: ScalarValue
    scale: true
    time: sq
    desc: |
      Particle acceleration along the X-axis.
    see:
      - particleAccelerationXMin
      - particleAccelerationXMax
  particleAccelerationY:
    type: ScalarValue
    scale: true
    time: sq
    desc: |
      Particle acceleration along the Y-axis.
    see:
      - particleAccelerationYMin
      - particleAccelerationYMax
  particleAccelerationZ:
    type: ScalarValue
    scale: true
    time: sq
    desc: |
      Particle acceleration along the Z-axis.
    see:
      - particleAccelerationZMin
      - particleAccelerationZMax
  unk_ds3_p1_7:
    type: ScalarValue
  unk_ds3_p1_8:
    type: ScalarValue
  particleAngularAccelerationZ:
    type: ScalarValue
    time: sq
    desc: |
      Angular acceleration for particles around the Z-axis in degrees per second squared.
    see:
      - particleAngularAccelerationZMin
      - particleAngularAccelerationZMax
  particleGrowthRateX:
    type: ScalarValue
    scale: true
    time: true
    desc: |
      The rate of change for the width of the particles.
    see:
      - particleGrowthRateXStatic
  particleGrowthRateY:
    type: ScalarValue
    scale: true
    time: true
    desc: |
      The rate of change for the height of the particles.
    see:
      - particleGrowthRateYStatic
  unk_ds3_p1_12:
    type: ScalarValue
  color:
    type: Vector4Value
    default: [1, 1, 1, 1]
    argument: ParticleAge
    color: true
    desc: |
      Color multiplier.
  unk_ds3_p1_14:
    type: ScalarValue
    default: 1
  unk_ds3_p1_15:
    type: ScalarValue
  unkParticleAcceleration:
    type: ScalarValue
    scale: true
    time: sq
    desc: |
      Seemingly identical to {@link particleAccelerationZ}?
  unk_ds3_p1_17:
    type: ScalarValue
  particleGravity:
    type: ScalarValue
    scale: true
    time: sq
    desc: |
      Downwards acceleration for particles.
  particleRandomTurnAngle:
    type: ScalarValue
    desc: |
      Maximum random turn angle for particles. Requires {@link particleRandomTurns} to be enabled.
    see:
      - particleRandomTurns
      - particleRandomTurnIntervalMax
  unk_ds3_p1_20:
    type: ScalarValue
  unk_ds3_p2_0:
    type: ScalarValue
    default: 1
  unk_ds3_p2_1:
    type: ScalarValue
    default: 1
  unk_ds3_p2_2:
    type: ScalarValue
  unk_ds3_p2_3:
    type: Vector4Value
    default: [1, 1, 1, 1]
  unk_ds3_p2_4:
    type: Vector4Value
    default: [1, 1, 1, 1]
  unk_ds3_p2_5:
    type: Vector4Value
    default: [1, 1, 1, 1]
  unk_ds3_p2_6:
    type: ScalarValue
games:
  DS3:
    fields1:
      - unk_ds3_f1_0
      - texture
      - unk_ds3_f1_2
      - normalMap
      - emitterShape
      - unk_ds3_f1_5
      - emitterSize
      #
      #
      - emitterRotation
      #
      #
      - unk_ds3_f1_12
      - unk_ds3_f1_13
      - unk_ds3_f1_14
      - emitterDistribution
      - unk_ds3_f1_16
      - unk_ds3_f1_17
      - unk_ds3_f1_18
      - unk_ds3_f1_19
      - unk_ds3_f1_20
      - unk_ds3_f1_21
      - emissionParticleCount
      - emissionParticleCountMin
      - emissionParticleCountMax
      - unk_ds3_f1_25
      - emissionIntervalMin
      - emissionIntervalMax
      - limitEmissionCount
      - emissionCountLimit
      - unk_ds3_f1_30
      - particleDuration
      - unk_ds3_f1_32
      - unk_ds3_f1_33
      - particleOffsetX
      - particleOffsetY
      - particleOffsetZ
      - particleOffsetXMin
      - particleOffsetYMin
      - particleOffsetZMin
      - particleOffsetXMax
      - particleOffsetYMax
      - particleOffsetZMax
      - particleSpeedX
      - particleSpeedY
      - particleSpeedZ
      - particleSpeedXMin
      - particleSpeedYMin
      - particleSpeedZMin
      - particleSpeedXMax
      - particleSpeedYMax
      - particleSpeedZMax
      - particleAccelerationXMin
      - particleAccelerationYMin
      - particleAccelerationZMin
      - particleAccelerationXMax
      - particleAccelerationYMax
      - particleAccelerationZMax
      - particleRotationVarianceX
      - particleRotationVarianceY
      - particleRotationVarianceZ
      - particleAngularSpeedVarianceX
      - particleAngularSpeedVarianceY
      - particleAngularSpeedVarianceZ
      - particleAngularAccelerationXMin
      - particleAngularAccelerationYMin
      - particleAngularAccelerationZMin
      - particleAngularAccelerationXMax
      - particleAngularAccelerationYMax
      - particleAngularAccelerationZMax
      - particleUniformScale
      - particleSizeX
      - particleSizeY
      - unk_ds3_f1_73
      - particleSizeXMin
      - particleSizeYMin
      - unk_ds3_f1_76
      - particleSizeXMax
      - particleSizeYMax
      - unk_ds3_f1_79
      - particleGrowthRateXStatic
      - particleGrowthRateYStatic
      - unk_ds3_f1_82
      - particleGrowthRateXMin
      - particleGrowthRateYMin
      - unk_ds3_f1_85
      - particleGrowthRateXMax
      - particleGrowthRateYMax
      - unk_ds3_f1_88
      - particleGrowthAccelerationXMin
      - particleGrowthAccelerationYMin
      - unk_ds3_f1_91
      - particleGrowthAccelerationXMax
      - particleGrowthAccelerationYMax
      - unk_ds3_f1_94
      - rgbMultiplier
      - alphaMultiplier
      - colorMin
      #
      #
      #
      - colorMax
      #
      #
      #
      - blendMode
      - columns
      - totalFrames
      - randomTextureFrame
      - unk_ds3_f1_109
      - maxFrameIndex
      - unk_ds3_f1_111
      - unk_ds3_f1_112
      - unk_ds3_f1_113
      - unk_ds3_f1_114
      - unk_ds3_f1_115
      - unk_ds3_f1_116
      - unk_ds3_f1_117
      - unk_ds3_f1_118
      - particleDurationMultiplier
      - unk_ds3_f1_120
      - particleSizeMultiplier
      - unk_ds3_f1_122
      - unk_ds3_f1_123
      - unk_ds3_f1_124
      - unk_ds3_f1_125
      - unk_ds3_f1_126
      - unk_ds3_f1_127
      - unk_ds3_f1_128
      - unk_ds3_f1_129
      - unk_ds3_f1_130
      - unk_ds3_f1_131
      - unk_ds3_f1_132
      - unk_ds3_f1_133
      - unk_ds3_f1_134
      - unk_ds3_f1_135
      - unk_ds3_f1_136
      - unk_ds3_f1_137
      - unk_ds3_f1_138
      - unk_ds3_f1_139
      - unk_ds3_f1_140
      - unk_ds3_f1_141
      - limitUpdateDistance
      - updateDistance
      - particleCollision
      - particleBounciness
      - particleRandomTurns
      - particleRandomTurnIntervalMax
      - traceParticles
      - unk_ds3_f1_149
      - particleTraceLength
      - traceParticlesThreshold
      - traceParticleHead
      - unk_ds3_f1_153
      - unk_ds3_f1_154
      - bloom
      - bloomColor
      #
      #
      #
      - desaturate
    fields2:
      - unk_ds3_f2_0
      - unk_ds3_f2_1
      - unk_ds3_f2_2
      - unk_ds3_f2_3
      - unk_ds3_f2_4
      - unk_ds3_f2_5
      - unk_ds3_f2_6
      - unk_ds3_f2_7
      - unk_ds3_f2_8
      - unk_ds3_f2_9
      - unk_ds3_f2_10
      - unk_ds3_f2_11
      - unk_ds3_f2_12
      - unk_ds3_f2_13
      - minFadeDistance
      - minDistance
      - maxFadeDistance
      - maxDistance
      - minDistanceThreshold
      - maxDistanceThreshold
      - unk_ds3_f2_20
      - unk_ds3_f2_21
      - unk_ds3_f2_22
      - unk_ds3_f2_23
      - unk_ds3_f2_24
      - unkDepthBlend1
      - unkDepthBlend2
      - unk_ds3_f2_27
      - unk_ds3_f2_28
      - unk_ds3_f2_28
    properties1:
      - particleFollowFactor
      - unk_ds3_p1_1
      - unk_ds3_p1_2
      - unk_ds3_p1_3
      - particleAccelerationX
      - particleAccelerationY
      - particleAccelerationZ
      - unk_ds3_p1_7
      - unk_ds3_p1_8
      - particleAngularAccelerationZ
      - particleGrowthRateX
      - particleGrowthRateY
      - unk_ds3_p1_12
      - color
      - unk_ds3_p1_14
      - unk_ds3_p1_15
      - unkParticleAcceleration
      - unk_ds3_p1_17
      - particleGravity
      - particleRandomTurnAngle
      - unk_ds3_p1_20
    properties2:
      - unk_ds3_p2_0
      - unk_ds3_p2_1
      - unk_ds3_p2_2
      - unk_ds3_p2_3
      - unk_ds3_p2_4
      - unk_ds3_p2_5
      - unk_ds3_p2_6
  SDT:
    fields1:
      - unk_ds3_f1_0
      - texture
      - unk_ds3_f1_2
      - normalMap
      - emitterShape
      - unk_ds3_f1_5
      - emitterSize
      #
      #
      - emitterRotation
      #
      #
      - unk_ds3_f1_12
      - unk_ds3_f1_13
      - unk_ds3_f1_14
      - emitterDistribution
      - unk_ds3_f1_16
      - unk_ds3_f1_17
      - unk_ds3_f1_18
      - unk_ds3_f1_19
      - unk_ds3_f1_20
      - unk_ds3_f1_21
      - emissionParticleCount
      - emissionParticleCountMin
      - emissionParticleCountMax
      - unk_ds3_f1_25
      - emissionIntervalMin
      - emissionIntervalMax
      - limitEmissionCount
      - emissionCountLimit
      - unk_ds3_f1_30
      - particleDuration
      - unk_ds3_f1_32
      - unk_ds3_f1_33
      - particleOffsetX
      - particleOffsetY
      - particleOffsetZ
      - particleOffsetXMin
      - particleOffsetYMin
      - particleOffsetZMin
      - particleOffsetXMax
      - particleOffsetYMax
      - particleOffsetZMax
      - particleSpeedX
      - particleSpeedY
      - particleSpeedZ
      - particleSpeedXMin
      - particleSpeedYMin
      - particleSpeedZMin
      - particleSpeedXMax
      - particleSpeedYMax
      - particleSpeedZMax
      - particleAccelerationXMin
      - particleAccelerationYMin
      - particleAccelerationZMin
      - particleAccelerationXMax
      - particleAccelerationYMax
      - particleAccelerationZMax
      - particleRotationVarianceX
      - particleRotationVarianceY
      - particleRotationVarianceZ
      - particleAngularSpeedVarianceX
      - particleAngularSpeedVarianceY
      - particleAngularSpeedVarianceZ
      - particleAngularAccelerationXMin
      - particleAngularAccelerationYMin
      - particleAngularAccelerationZMin
      - particleAngularAccelerationXMax
      - particleAngularAccelerationYMax
      - particleAngularAccelerationZMax
      - particleUniformScale
      - particleSizeX
      - particleSizeY
      - unk_ds3_f1_73
      - particleSizeXMin
      - particleSizeYMin
      - unk_ds3_f1_76
      - particleSizeXMax
      - particleSizeYMax
      - unk_ds3_f1_79
      - particleGrowthRateXStatic
      - particleGrowthRateYStatic
      - unk_ds3_f1_82
      - particleGrowthRateXMin
      - particleGrowthRateYMin
      - unk_ds3_f1_85
      - particleGrowthRateXMax
      - particleGrowthRateYMax
      - unk_ds3_f1_88
      - particleGrowthAccelerationXMin
      - particleGrowthAccelerationYMin
      - unk_ds3_f1_91
      - particleGrowthAccelerationXMax
      - particleGrowthAccelerationYMax
      - unk_ds3_f1_94
      - rgbMultiplier
      - alphaMultiplier
      - colorMin
      #
      #
      #
      - colorMax
      #
      #
      #
      - blendMode
      - columns
      - totalFrames
      - randomTextureFrame
      - unk_ds3_f1_109
      - maxFrameIndex
      - unk_ds3_f1_111
      - unk_ds3_f1_112
      - unk_ds3_f1_113
      - unk_ds3_f1_114
      - unk_ds3_f1_115
      - unk_ds3_f1_116
      - unk_ds3_f1_117
      - unk_ds3_f1_118
      - particleDurationMultiplier
      - unk_ds3_f1_120
      - particleSizeMultiplier
      - unk_ds3_f1_122
      - unk_ds3_f1_123
      - unk_ds3_f1_124
      - unk_ds3_f1_125
      - unk_ds3_f1_126
      - unk_ds3_f1_127
      - unk_ds3_f1_128
      - unk_ds3_f1_129
      - unk_ds3_f1_130
      - unk_ds3_f1_131
      - unk_ds3_f1_132
      - unk_ds3_f1_133
      - unk_ds3_f1_134
      - unk_ds3_f1_135
      - unk_ds3_f1_136
      - unk_ds3_f1_137
      - unk_ds3_f1_138
      - unk_ds3_f1_139
      - unk_ds3_f1_140
      - unk_ds3_f1_141
      - limitUpdateDistance
      - updateDistance
      - particleCollision
      - particleBounciness
      - particleRandomTurns
      - particleRandomTurnIntervalMax
      - traceParticles
      - unk_ds3_f1_149
      - particleTraceLength
      - traceParticlesThreshold
      - traceParticleHead
      - unk_ds3_f1_153
      - unk_ds3_f1_154
      - bloom
      - bloomColor
      #
      #
      #
      - unk_sdt_f1_160
      - unk_sdt_f1_161
      - unk_sdt_f1_162
      - unk_sdt_f1_163
      - unk_sdt_f1_164
      - unk_sdt_f1_165
      - unk_sdt_f1_166
    fields2:
      - unk_ds3_f2_0
      - unk_ds3_f2_1
      - unk_ds3_f2_2
      - unk_ds3_f2_3
      - unk_ds3_f2_4
      - unk_ds3_f2_5
      - unk_ds3_f2_6
      - unk_ds3_f2_7
      - unk_ds3_f2_8
      - unk_ds3_f2_9
      - unk_ds3_f2_10
      - unk_ds3_f2_11
      - unk_ds3_f2_12
      - unk_ds3_f2_13
      - minFadeDistance
      - minDistance
      - maxFadeDistance
      - maxDistance
      - minDistanceThreshold
      - maxDistanceThreshold
      - unk_ds3_f2_20
      - unk_ds3_f2_21
      - unk_ds3_f2_22
      - unk_ds3_f2_23
      - unk_ds3_f2_24
      - unkDepthBlend1
      - unkDepthBlend2
      - unk_ds3_f2_27
      - unk_ds3_f2_28
      - unk_sdt_f2_29
      - shadowDarkness
      - unkHideIndoors
      - unk_sdt_f2_32
      - specular
      - glossiness
      - lighting
      - unk_sdt_f2_36
      - unk_sdt_f2_37
      - specularity
    properties1: DS3
    properties2: DS3
  ER:
    fields1:
      - unk_ds3_f1_0
      - texture
      - unk_ds3_f1_2
      - normalMap
      - emitterShape
      - unk_ds3_f1_5
      - emitterSize
      #
      #
      - emitterRotation
      #
      #
      - unk_ds3_f1_12
      - unk_ds3_f1_13
      - unk_ds3_f1_14
      - emitterDistribution
      - unk_ds3_f1_16
      - unk_ds3_f1_17
      - unk_ds3_f1_18
      - unk_ds3_f1_19
      - unk_ds3_f1_20
      - unk_ds3_f1_21
      - emissionParticleCount
      - emissionParticleCountMin
      - emissionParticleCountMax
      - unk_ds3_f1_25
      - emissionIntervalMin
      - emissionIntervalMax
      - limitEmissionCount
      - emissionCountLimit
      - unk_ds3_f1_30
      - particleDuration
      - unk_ds3_f1_32
      - unk_ds3_f1_33
      - particleOffsetX
      - particleOffsetY
      - particleOffsetZ
      - particleOffsetXMin
      - particleOffsetYMin
      - particleOffsetZMin
      - particleOffsetXMax
      - particleOffsetYMax
      - particleOffsetZMax
      - particleSpeedX
      - particleSpeedY
      - particleSpeedZ
      - particleSpeedXMin
      - particleSpeedYMin
      - particleSpeedZMin
      - particleSpeedXMax
      - particleSpeedYMax
      - particleSpeedZMax
      - particleAccelerationXMin
      - particleAccelerationYMin
      - particleAccelerationZMin
      - particleAccelerationXMax
      - particleAccelerationYMax
      - particleAccelerationZMax
      - particleRotationVarianceX
      - particleRotationVarianceY
      - particleRotationVarianceZ
      - particleAngularSpeedVarianceX
      - particleAngularSpeedVarianceY
      - particleAngularSpeedVarianceZ
      - particleAngularAccelerationXMin
      - particleAngularAccelerationYMin
      - particleAngularAccelerationZMin
      - particleAngularAccelerationXMax
      - particleAngularAccelerationYMax
      - particleAngularAccelerationZMax
      - particleUniformScale
      - particleSizeX
      - particleSizeY
      - unk_ds3_f1_73
      - particleSizeXMin
      - particleSizeYMin
      - unk_ds3_f1_76
      - particleSizeXMax
      - particleSizeYMax
      - unk_ds3_f1_79
      - particleGrowthRateXStatic
      - particleGrowthRateYStatic
      - unk_ds3_f1_82
      - particleGrowthRateXMin
      - particleGrowthRateYMin
      - unk_ds3_f1_85
      - particleGrowthRateXMax
      - particleGrowthRateYMax
      - unk_ds3_f1_88
      - particleGrowthAccelerationXMin
      - particleGrowthAccelerationYMin
      - unk_ds3_f1_91
      - particleGrowthAccelerationXMax
      - particleGrowthAccelerationYMax
      - unk_ds3_f1_94
      - rgbMultiplier
      - alphaMultiplier
      - colorMin
      #
      #
      #
      - colorMax
      #
      #
      #
      - blendMode
      - columns
      - totalFrames
      - randomTextureFrame
      - unk_ds3_f1_109
      - maxFrameIndex
      - unk_ds3_f1_111
      - unk_ds3_f1_112
      - unk_ds3_f1_113
      - unk_ds3_f1_114
      - unk_ds3_f1_115
      - unk_ds3_f1_116
      - unk_ds3_f1_117
      - unk_ds3_f1_118
      - particleDurationMultiplier
      - unk_ds3_f1_120
      - particleSizeMultiplier
      - unk_ds3_f1_122
      - unk_ds3_f1_123
      - unk_ds3_f1_124
      - unk_ds3_f1_125
      - unk_ds3_f1_126
      - unk_ds3_f1_127
      - unk_ds3_f1_128
      - unk_ds3_f1_129
      - unk_ds3_f1_130
      - unk_ds3_f1_131
      - unk_ds3_f1_132
      - unk_ds3_f1_133
      - unk_ds3_f1_134
      - unk_ds3_f1_135
      - unk_ds3_f1_136
      - unk_ds3_f1_137
      - unk_ds3_f1_138
      - unk_ds3_f1_139
      - unk_ds3_f1_140
      - unk_ds3_f1_141
      - limitUpdateDistance
      - updateDistance
      - particleCollision
      - particleBounciness
      - particleRandomTurns
      - particleRandomTurnIntervalMax
      - traceParticles
      - unk_ds3_f1_149
      - particleTraceLength
      - traceParticlesThreshold
      - traceParticleHead
      - unk_ds3_f1_153
      - unk_ds3_f1_154
      - bloom
      - bloomColor
      #
      #
      #
      - unk_sdt_f1_160
      - unk_sdt_f1_161
      - unk_sdt_f1_162
      - unk_sdt_f1_163
      - unk_sdt_f1_164
      - unk_sdt_f1_165
      - unk_sdt_f1_166
      - unk_er_f1_167
    fields2:
      - unk_ds3_f2_0
      - unk_ds3_f2_1
      - unk_ds3_f2_2
      - unk_ds3_f2_3
      - unk_ds3_f2_4
      - unk_ds3_f2_5
      - unk_ds3_f2_6
      - unk_ds3_f2_7
      - unk_ds3_f2_8
      - unk_ds3_f2_9
      - unk_ds3_f2_10
      - unk_ds3_f2_11
      - unk_ds3_f2_12
      - unk_ds3_f2_13
      - minFadeDistance
      - minDistance
      - maxFadeDistance
      - maxDistance
      - minDistanceThreshold
      - maxDistanceThreshold
      - unk_ds3_f2_20
      - unk_ds3_f2_21
      - unk_ds3_f2_22
      - unk_ds3_f2_23
      - unk_ds3_f2_24
      - unkDepthBlend1
      - unkDepthBlend2
      - unk_ds3_f2_27
      - unk_ds3_f2_28
      - unk_sdt_f2_29
      - shadowDarkness
      - unkHideIndoors
      - unk_sdt_f2_32
      - specular
      - glossiness
      - lighting
      - unk_sdt_f2_36
      - unk_sdt_f2_37
      - specularity
      - unk_er_f2_39
    properties1: DS3
    properties2: DS3
  AC6: ER
