type: 603
name: BillboardEx
slot: Appearance
meta:
  isAppearance: true
  isParticle: true
desc: |
  Particle with a texture that may be animated. This is the most common particle type and it has a lot of useful fields and properties.
properties:
  texture:
    type: ScalarValue
    field: int
    default: 1
    argument: Constant0
    resource: texture
    textureType: a
    desc: |
      Texture ID.
  blendMode:
    type: BlendMode | ScalarProperty
    field: int
    default: BlendMode.Normal
    argument: Constant0
    desc: |
      Blend mode.
  offsetX:
    type: ScalarValue
    argument: ParticleAge
    scale: true
    desc: |
      X position offset.
  offsetY:
    type: ScalarValue
    argument: ParticleAge
    scale: true
    desc: |
      Y position offset.
  offsetZ:
    type: ScalarValue
    argument: ParticleAge
    scale: true
    desc: |
      Z position offset.
  width:
    type: ScalarValue
    default: 1
    argument: ParticleAge
    scale: true
    desc: |
      The width of the particle.

      If {@link uniformScale} is enabled, this also controls the height.
    see:
      - scaleVariationX
  height:
    type: ScalarValue
    default: 1
    argument: ParticleAge
    scale: true
    desc: |
      The height of the particle.

      If {@link uniformScale} is enabled, {@link width} also controls the height, and this property is ignored.
    see:
      - scaleVariationY
  color1:
    type: Vector4Value
    default: [1, 1, 1, 1]
    argument: ParticleAge
    color: true
    desc: |
      Color multiplier.
  color2:
    type: Vector4Value
    default: [1, 1, 1, 1]
    argument: EmissionTime
    color: true
    desc: |
      Color multiplier.
  color3:
    type: Vector4Value
    default: [1, 1, 1, 1]
    argument: ParticleAge
    color: true
    desc: |
      Color multiplier.
  alphaFadeThreshold:
    type: ScalarValue
    argument: ParticleAge
    desc: |
      Parts of the particle with less opacity than this threshold will be invisible. The range is 0-255.

      Values above this threshold will be stretched to fill the alpha range, so values near the threshold will be less visible, creating a smooth transition between the parts that have been hidden by the threshold and the ones that are still visible.
  rotationX:
    type: ScalarValue
    argument: Constant0
    desc: |
      Rotation around the X-axis in degrees.
    see:
      - angularSpeedX
      - angularSpeedMultiplierX
  rotationY:
    type: ScalarValue
    argument: Constant0
    desc: |
      Rotation around the Y-axis in degrees.
    see:
      - angularSpeedY
      - angularSpeedMultiplierY
  rotationZ:
    type: ScalarValue
    argument: Constant0
    desc: |
      Rotation around the Z-axis in degrees.
    see:
      - angularSpeedZ
      - angularSpeedMultiplierZ
  angularSpeedX:
    type: ScalarValue
    argument: ParticleAge
    time: true
    desc: |
      Angular speed around the X-axis in degrees per second.
    see:
      - rotationX
      - angularSpeedMultiplierX
  angularSpeedY:
    type: ScalarValue
    argument: ParticleAge
    time: true
    desc: |
      Angular speed around the Y-axis in degrees per second.
    see:
      - rotationY
      - angularSpeedMultiplierY
  angularSpeedZ:
    type: ScalarValue
    argument: ParticleAge
    time: true
    desc: |
      Angular speed around the Z-axis in degrees per second.
    see:
      - rotationZ
      - angularSpeedMultiplierZ
  angularSpeedMultiplierX:
    type: ScalarValue
    default: 1
    argument: ParticleAge
    desc: |
      Multiplier for {@link angularSpeedX}.
    see:
      - rotationX
  angularSpeedMultiplierY:
    type: ScalarValue
    default: 1
    argument: ParticleAge
    desc: |
      Multiplier for {@link angularSpeedY}.
    see:
      - rotationY
  angularSpeedMultiplierZ:
    type: ScalarValue
    default: 1
    argument: ParticleAge
    desc: |
      Multiplier for {@link angularSpeedZ}.
    see:
      - rotationZ
  depthOffset:
    type: ScalarValue
    argument: ParticleAge
    scale: true
    desc: |
      Positive values will make the particle draw in front of objects closer to the camera, while negative values will make it draw behind objects farther away from the camera.
  frameIndex:
    type: ScalarValue
    argument: ParticleAge
    desc: |
      The index of the frame to show from the texture atlas. Can be animated using a {@link PropertyFunction.Linear linear property} or similar.

      Seemingly identical to {@link frameIndexOffset}? The sum of these two properties is the actual frame index that gets used.
  frameIndexOffset:
    type: ScalarValue
    argument: ParticleAge
    desc: |
      Seemingly identical to {@link frameIndex}? The sum of these two properties is the actual frame index that gets used.
  rgbMultiplier:
    type: ScalarValue
    default: 1
    argument: EffectAge
    desc: |
      Scalar multiplier for the color that does not affect the alpha. Effectively a brightness multiplier.
  alphaMultiplier:
    type: ScalarValue
    default: 1
    argument: EffectAge
    desc: |
      Alpha multiplier.
  orientation:
    type: OrientationMode
    field: int
    default: OrientationMode.CameraPlane
    desc: |
      Controls the orientation mode for the particles. See {@link OrientationMode} for more information.
  normalMap:
    field: int
    resource: texture
    textureType: 'n'
    desc: |
      Normal map texture ID.
  scaleVariationX:
    field: float
    default: 1
    desc: |
      Each particle will pick a random number between this value and 1, and the width of the particle will be multiplied by this number. For example, setting this to 0.5 will make the particles randomly thinner, down to half width. Setting it to 2 will make them randomly wider, up to double width.

      If {@link uniformScale} is enabled, this also affects the height.
    see:
      - scaleVariationY
  scaleVariationY:
    field: float
    default: 1
    desc: |
      Each particle will pick a random number between this value and 1, and the height of the particle will be multiplied by this number. For example, setting this to 0.5 will make the particles randomly shorter, down to half height. Setting it to 2 will make them randomly taller, up to double height.

      If {@link uniformScale} is enabled, {@link scaleVariationX} also affects the height, and this field is ignored.
    see:
      - scaleVariationX
  uniformScale:
    field: bool
    default: false
    desc: |
      If enabled, the particle width-related properties and fields will control both the width and height of the particles, and the height counterparts will be ignored.
    see:
      - width
      - height
      - scaleVariationX
      - scaleVariationY
  columns:
    field: int
    default: 1
    desc: |
      To split the texture into multiple animation frames, this value must be set to the number of columns in the texture. It should equal `textureWidth / frameWidth`.
    see:
      - totalFrames
  totalFrames:
    field: int
    default: 1
    desc: |
      To split the texture into multiple animation frames, this value must be set to the total number of frames in the texture.
    see:
      - columns
  interpolateFrames:
    field: bool
    default: true
    desc: |
      If enabled, the texture animation will use linear interpolation to mix frames when the frame index is not a whole number. For example, if the frame index is 0.5, enabling this will cause the average of the first two frames to be shown instead of just the first frame.

      If disabled, the frame index will be truncated to get a whole number.
    see:
      - frameIndex
      - frameIndexOffset
  bloomColor:
    field: vec4
    default: [1, 1, 1, 0]
    color: true
    desc: |
      Controls the color of the additional bloom effect. The colors of the particle will be multiplied with this color to get the final color of the bloom effect.

      Note:
      - This has no effect if the "Effects Quality" setting is set to "Low".
      - This does not affect the natural bloom effect from high color values.
  shadowDarkness:
    field: float
    desc: |
      Controls how dark shaded parts of the particle are.
  specular:
    field: int
    resource: texture
    textureType: 3m
    desc: |
      Specular texture ID.
    see:
      - lighting
      - glossiness
      - specularity
  glossiness:
    field: float
    default: 0.25
    desc: |
      Controls how sharp the specular highlights are.
    see:
      - lighting
      - specular
      - specularity
  lighting:
    type: LightingMode
    field: int
    default: LightingMode.Unlit
    desc: |
      Controls how the particles are lit. See {@link LightingMode} for more information.
  specularity:
    field: float
    default: 0.5
    desc: |
      Controls how bright the specular highlights are.
    see:
      - lighting
      - specular
      - glossiness
  unk_ds3_f1_7:
    field: int
  unk_ds3_f1_11:
    field: int
  unk_ds3_f1_12:
    field: int
  unk_ds3_f1_13:
    field: float
    default: -1
  depthBlend:
    field: bool
    default: true
    desc: |
      Controls how the particles should render when behind something else. If disabled, the particles will simply be drawn behind anything they are behind in the world. If enabled, they will instead display in front of the object if they are close enough, and will fade out with distance from the object's surface that is blocking the view of the particle.
  octagonal:
    field: bool
    default: false
    desc: |
      Controls the shape of the particles. If disabled, the particles will be rectangular. If enabled, they will be octagonal.
  unk_ds3_f1_16:
    field: int
  unk_ds3_f2_0:
    field: int
  unk_ds3_f2_1:
    field: bool
  unk_ds3_f2_2:
    field: int
    default: 8
  unk_ds3_f2_3:
    field: float
  unk_ds3_f2_4:
    field: int
    default: 1
  unk_ds3_f2_9:
    field: float
  unk_ds3_f2_10:
    field: int
  unk_ds3_f2_11:
    field: int
  unk_ds3_f2_12:
    field: int
  unk_ds3_f2_13:
    field: int
  minDistance:
    field: float
    default: -1
    scale: ifNotMinusOne
    desc: |
      Minimum view distance. If a particle is closer than this distance from the camera, it will be hidden. Can be set to -1 to disable the limit.

      This requires {@link minFadeDistance} to be set to something other than -1.

      This is different from {@link minDistanceThreshold}, as this controls the start of a distance range that has smooth transitions at each end, while the threshold value is a hard cut-off.
    see:
      - minFadeDistance
      - maxFadeDistance
      - maxDistance
      - minDistanceThreshold
      - maxDistanceThreshold
  minFadeDistance:
    field: float
    default: -1
    scale: ifNotMinusOne
    desc: |
      This controls a point where the opacity of a particle will start to fade to 0 near the {@link minDistance minimum view distance}. At {@link minDistance}, the opacity will be 0, and it will linearly approach 1 as the distance between the camera and the particle approaches this distance.

      This requires {@link minDistance} to be set to something other than -1. This distance limit can be disabled by setting this and minDistance to -1.
    see:
      - minDistance
      - maxFadeDistance
      - maxDistance
      - minDistanceThreshold
      - maxDistanceThreshold
  maxFadeDistance:
    field: float
    default: -1
    scale: ifNotMinusOne
    desc: |
      This controls a point where the opacity of a particle will start to fade to 0 near the {@link maxDistance maximum view distance}. At {@link maxDistance}, the opacity will be 0, and it will linearly approach 1 as the distance between the camera and the particle approaches this distance.

      This requires {@link maxDistance} to be set to something other than -1. This distance limit can be disabled by setting this and minDistance to -1.
    see:
      - minFadeDistance
      - minDistance
      - maxDistance
      - minDistanceThreshold
      - maxDistanceThreshold
  maxDistance:
    field: float
    default: -1
    scale: ifNotMinusOne
    desc: |
      Minimum view distance. If a particle is farther away than this distance from the camera, it will be hidden. Can be set to -1 to disable the limit.

      This requires {@link maxFadeDistance} to be set to something other than -1.

      This is different from {@link maxDistanceThreshold}, as this controls the start of a distance range that has smooth transitions at each end, while the threshold value is a hard cut-off.
    see:
      - minFadeDistance
      - minDistance
      - maxFadeDistance
      - minDistanceThreshold
      - maxDistanceThreshold
  minDistanceThreshold:
    field: float
    default: -1
    scale: ifNotMinusOne
    desc: |
      A hard cut-off point for the distance between the camera and the particle. If a particle is closer than this distance from the camera, it will be hidden. Can be set to -1 to disable the limit.
    see:
      - minFadeDistance
      - minDistance
      - maxFadeDistance
      - maxDistance
      - maxDistanceThreshold
  maxDistanceThreshold:
    field: float
    default: -1
    scale: ifNotMinusOne
    desc: |
      A hard cut-off point for the distance between the camera and the particle. If a particle is farther away than this distance from the camera, it will be hidden. Can be set to -1 to disable the limit.
    see:
      - minFadeDistance
      - minDistance
      - maxFadeDistance
      - maxDistance
      - minDistanceThreshold
  unk_ds3_f2_20:
    field: int
  unk_ds3_f2_21:
    field: int
  unk_ds3_f2_22:
    field: int
  unk_ds3_f2_23:
    field: int
  unk_ds3_f2_24:
    field: int
  unkDepthBlend1:
    field: float
    default: 1
  unkDepthBlend2:
    field: float
    scale: true
  unk_ds3_f2_27:
    field: int
    default: 1
  unk_ds3_f2_28:
    field: int
  unk_ds3_f2_29:
    field: float
    default: 5
  unk_ds3_p1_21:
    type: ScalarValue
  unk_ds3_p1_22:
    type: ScalarValue
  unk_ds3_p2_2:
    type: ScalarValue
  unk_ds3_p2_3:
    type: Vector4Value
    default: [1, 1, 1, 1]
  unk_ds3_p2_4:
    type: Vector4Value
    default: [1, 1, 1, 1]
  unk_ds3_p2_5:
    type: Vector4Value
    default: [1, 1, 1, 1]
  alphaThreshold:
    type: ScalarValue
    argument: EffectAge
    desc: |
      Parts of the particle with less opacity than this threshold will be invisible. The range is 0-255.

      This threshold creates a hard cut-off between visible and not visible, which is unlike the {@link alphaFadeThreshold}.
  unk_sdt_f1_15:
    field: int
    default: 1
  unk_sdt_f1_16:
    field: int
    default: 1
  unk_sdt_f1_17:
    field: int
  unkHideIndoors:
    field: int
    desc: |
      When set to 1, this stops the particles from being shown indoors.

      Other values are used in AC6, but what they do is unknown.
  unk_sdt_f2_32:
    field: int
    default: 1
  unk_sdt_f2_36:
    field: int
    default: -2
  unk_sdt_f2_37:
    field: int
  unk_sdt_f2_39:
    field: int
    default: 1
  unk_sdt_f2_40:
    field: int
  unk_sdt_f2_41:
    field: int
  unk_sdt_f2_42:
    field: int
  unk_sdt_f2_43:
    field: int
  unk_sdt_f2_44:
    field: int
  unk_ac6_f2_45:
    field: int
games:
  DS3:
    fields1:
      - orientation
      - texture
      - normalMap
      - blendMode
      - scaleVariationX
      - scaleVariationY
      - uniformScale
      - unk_ds3_f1_7
      - columns
      - totalFrames
      - interpolateFrames
      - unk_ds3_f1_11
      - unk_ds3_f1_12
      - unk_ds3_f1_13
      - depthBlend
      - octagonal
      - unk_ds3_f1_16
    fields2:
      - unk_ds3_f2_0
      - unk_ds3_f2_1
      - unk_ds3_f2_2
      - unk_ds3_f2_3
      - unk_ds3_f2_4
      - bloomColor
      #
      #
      #
      - unk_ds3_f2_9
      - unk_ds3_f2_10
      - unk_ds3_f2_11
      - unk_ds3_f2_12
      - unk_ds3_f2_13
      - minFadeDistance
      - minDistance
      - maxFadeDistance
      - maxDistance
      - minDistanceThreshold
      - maxDistanceThreshold
      - unk_ds3_f2_20
      - unk_ds3_f2_21
      - unk_ds3_f2_22
      - unk_ds3_f2_23
      - unk_ds3_f2_24
      - unkDepthBlend1
      - unkDepthBlend2
      - unk_ds3_f2_27
      - unk_ds3_f2_28
      - unk_ds3_f2_29
    properties1:
      - offsetX
      - offsetY
      - offsetZ
      - width
      - height
      - color1
      - color2
      - color3
      - alphaFadeThreshold
      - rotationX
      - rotationY
      - rotationZ
      - angularSpeedX
      - angularSpeedMultiplierX
      - angularSpeedY
      - angularSpeedMultiplierY
      - angularSpeedZ
      - angularSpeedMultiplierZ
      - depthOffset
      - frameIndex
      - frameIndexOffset
      - unk_ds3_p1_21
      - unk_ds3_p1_22
    properties2:
      - rgbMultiplier
      - alphaMultiplier
      - unk_ds3_p2_2
      - unk_ds3_p2_3
      - unk_ds3_p2_4
      - unk_ds3_p2_5
      - alphaThreshold
  SDT:
    fields1:
      - orientation
      - normalMap
      - scaleVariationX
      - scaleVariationY
      - uniformScale
      - unk_ds3_f1_7
      - columns
      - totalFrames
      - interpolateFrames
      - unk_ds3_f1_11
      - unk_ds3_f1_12
      - unk_ds3_f1_13
      - depthBlend
      - octagonal
      - unk_ds3_f1_16
      - unk_sdt_f1_15
      - unk_sdt_f1_16
      - unk_sdt_f1_17
    fields2:
      - unk_ds3_f2_0
      - unk_ds3_f2_1
      - unk_ds3_f2_2
      - unk_ds3_f2_3
      - unk_ds3_f2_4
      - bloomColor
      #
      #
      #
      - unk_ds3_f2_9
      - unk_ds3_f2_10
      - unk_ds3_f2_11
      - unk_ds3_f2_12
      - unk_ds3_f2_13
      - minFadeDistance
      - minDistance
      - maxFadeDistance
      - maxDistance
      - minDistanceThreshold
      - maxDistanceThreshold
      - unk_ds3_f2_20
      - unk_ds3_f2_21
      - unk_ds3_f2_22
      - unk_ds3_f2_23
      - unk_ds3_f2_24
      - unkDepthBlend1
      - unkDepthBlend2
      - unk_ds3_f2_27
      - unk_ds3_f2_28
      - unk_ds3_f2_29
      - shadowDarkness
      - unkHideIndoors
      - unk_sdt_f2_32
      - specular
      - glossiness
      - lighting
      - unk_sdt_f2_36
      - unk_sdt_f2_37
      - specularity
      - unk_sdt_f2_39
      - unk_sdt_f2_40
      - unk_sdt_f2_41
      - unk_sdt_f2_42
      - unk_sdt_f2_43
      - unk_sdt_f2_44
    properties1:
      - texture
      - blendMode
      - offsetX
      - offsetY
      - offsetZ
      - width
      - height
      - color1
      - color2
      - color3
      - alphaFadeThreshold
      - rotationX
      - rotationY
      - rotationZ
      - angularSpeedX
      - angularSpeedMultiplierX
      - angularSpeedY
      - angularSpeedMultiplierY
      - angularSpeedZ
      - angularSpeedMultiplierZ
      - depthOffset
      - frameIndex
      - frameIndexOffset
      - unk_ds3_p1_21
      - unk_ds3_p1_22
    properties2: DS3
  ER: SDT
  AC6:
    fields1: SDT
    fields2:
      - unk_ds3_f2_0
      - unk_ds3_f2_1
      - unk_ds3_f2_2
      - unk_ds3_f2_3
      - unk_ds3_f2_4
      - bloomColor
      #
      #
      #
      - unk_ds3_f2_9
      - unk_ds3_f2_10
      - unk_ds3_f2_11
      - unk_ds3_f2_12
      - unk_ds3_f2_13
      - minFadeDistance
      - minDistance
      - maxFadeDistance
      - maxDistance
      - minDistanceThreshold
      - maxDistanceThreshold
      - unk_ds3_f2_20
      - unk_ds3_f2_21
      - unk_ds3_f2_22
      - unk_ds3_f2_23
      - unk_ds3_f2_24
      - unkDepthBlend1
      - unkDepthBlend2
      - unk_ds3_f2_27
      - unk_ds3_f2_28
      - unk_ds3_f2_29
      - shadowDarkness
      - unkHideIndoors
      - unk_sdt_f2_32
      - specular
      - glossiness
      - lighting
      - unk_sdt_f2_36
      - unk_sdt_f2_37
      - specularity
      - unk_sdt_f2_39
      - unk_sdt_f2_40
      - unk_sdt_f2_41
      - unk_sdt_f2_42
      - unk_sdt_f2_43
      - unk_sdt_f2_44
      - unk_ac6_f2_45
    properties1: SDT
    properties2: DS3
