type: 603
name: BillboardEx
desc: |
  Particle with a texture that may be animated. This is the most common particle type and it has a lot of useful fields and properties.
properties:
  texture:
    type: ScalarPropertyArg
    field: int
    default: 1
    argument: Constant0
    desc: |
      Texture ID.
  blendMode:
    type: BlendMode | ScalarProperty
    field: int
    default: BlendMode.Normal
    argument: Constant0
    desc: |
      Blend mode.
  offsetX:
    type: ScalarPropertyArg
    argument: ParticleAge
    desc: |
      X position offset.
  offsetY:
    type: ScalarPropertyArg
    argument: ParticleAge
    desc: |
      Y position offset.
  offsetZ:
    type: ScalarPropertyArg
    argument: ParticleAge
    desc: |
      Z position offset.
  width:
    type: ScalarPropertyArg
    default: 1
    argument: ParticleAge
    desc: |
      The width of the particle.

      If {@link uniformScale} is enabled, this also controls the height.
  height:
    type: ScalarPropertyArg
    default: 1
    argument: ParticleAge
    desc: |
      The height of the particle.

      If {@link uniformScale} is enabled, {@link width} also controls the height, and this property is ignored.
  color1:
    type: Vector4PropertyArg
    default: "[1, 1, 1, 1]"
    argument: ParticleAge
    desc: |
      Color multiplier.
  color2:
    type: Vector4PropertyArg
    default: "[1, 1, 1, 1]"
    argument: EmissionTime
    desc: |
      Color multiplier.
  color3:
    type: Vector4PropertyArg
    default: "[1, 1, 1, 1]"
    argument: ParticleAge
    desc: |
      Color multiplier.
  alphaThreshold:
    type: ScalarPropertyArg
    argument: ParticleAge
    desc: |
      Parts of the particle with less opacity than this threshold will be invisible. The range is 0-255.
  rotationX:
    type: ScalarPropertyArg
    argument: Constant0
    desc: |
      Rotation around the X-axis in degrees.
    see:
      - rotationSpeedX
      - rotationSpeedMultiplierX
  rotationY:
    type: ScalarPropertyArg
    argument: Constant0
    desc: |
      Rotation around the Y-axis in degrees.
    see:
      - rotationSpeedY
      - rotationSpeedMultiplierY
  rotationZ:
    type: ScalarPropertyArg
    argument: Constant0
    desc: |
      Rotation around the Z-axis in degrees.
    see:
      - rotationSpeedZ
      - rotationSpeedMultiplierZ
  rotationSpeedX:
    type: ScalarPropertyArg
    argument: ParticleAge
    desc: |
      Rotation speed around the X-axis in degrees per second.
    see:
      - rotationX
      - rotationSpeedMultiplierX
  rotationSpeedY:
    type: ScalarPropertyArg
    argument: ParticleAge
    desc: |
      Rotation speed around the Y-axis in degrees per second.
    see:
      - rotationY
      - rotationSpeedMultiplierY
  rotationSpeedZ:
    type: ScalarPropertyArg
    argument: ParticleAge
    desc: |
      Rotation speed around the Z-axis in degrees per second.
    see:
      - rotationZ
      - rotationSpeedMultiplierZ
  rotationSpeedMultiplierX:
    type: ScalarPropertyArg
    default: 1
    argument: ParticleAge
    desc: |
      Multiplier for {@link rotationSpeedX}.
    see:
      - rotationX
  rotationSpeedMultiplierY:
    type: ScalarPropertyArg
    default: 1
    argument: ParticleAge
    desc: |
      Multiplier for {@link rotationSpeedY}.
    see:
      - rotationY
  rotationSpeedMultiplierZ:
    type: ScalarPropertyArg
    default: 1
    argument: ParticleAge
    desc: |
      Multiplier for {@link rotationSpeedZ}.
    see:
      - rotationZ
  depthOffset:
    type: ScalarPropertyArg
    argument: ParticleAge
    desc: |
      Positive values will make the particle draw in front of objects closer to the camera, while negative values will make it draw behind objects farther away from the camera.
  frameIndex:
    type: ScalarPropertyArg
    argument: ParticleAge
    desc: |
      The index of the frame to show from the texture atlas. Can be animated using a {@link PropertyFunction.Linear linear property} or similar.

      Seemingly identical to {@link frameIndexOffset}? The sum of these two properties is the actual frame index that gets used.
  frameIndexOffset:
    type: ScalarPropertyArg
    argument: ParticleAge
    desc: |
      Seemingly identical to {@link frameIndex}? The sum of these two properties is the actual frame index that gets used.
  rgbMultiplier:
    type: ScalarPropertyArg
    default: 1
    argument: EffectAge
    desc: |
      Scalar multiplier for the color that does not affect the alpha. Effectively a brightness multiplier.
  alphaMultiplier:
    type: ScalarPropertyArg
    default: 1
    argument: EffectAge
    desc: |
      Alpha multiplier.
  orientation:
    type: OrientationMode
    field: int
    default: OrientationMode.CameraPlane
    desc: |
      Controls the orientation mode for the particles. See {@link OrientationMode} for more information.
  normalMap:
    field: int
    desc: |
      Normal map texture ID.
  scaleVariationX:
    field: float
    default: 1
    desc: |
      Each particle will pick a random number between this value and 1, and the width of the particle will be multiplied by this number. For example, setting this to 0.5 will make the particles randomly thinner, down to half width. Setting it to 2 will make them randomly wider, up to double width.

      If {@link uniformScale} is enabled, this also affects the height.
    see:
      - scaleVariationY
  scaleVariationY:
    field: float
    default: 1
    desc: |
      Each particle will pick a random number between this value and 1, and the height of the particle will be multiplied by this number. For example, setting this to 0.5 will make the particles randomly shorter, down to half height. Setting it to 2 will make them randomly taller, up to double height.

      If {@link uniformScale} is enabled, {@link scaleVariationX} also affects the height, and this field is ignored.
    see:
      - scaleVariationX
  uniformScale:
    field: bool
    default: false
    desc: |
      If enabled, the particle width-related properties and fields will control both the width and height of the particles, and the height counterparts will be ignored.
    see:
      - width
      - height
      - scaleVariationX
      - scaleVariationY
  columns:
    field: int
    default: 1
    desc: |
      To split the texture into multiple animation frames, this value must be set to the number of columns in the texture. It should equal `textureWidth / frameWidth`.
    see:
      - totalFrames
  totalFrames:
    field: int
    default: 1
    desc: |
      To split the texture into multiple animation frames, this value must be set to the total number of frames in the texture.
    see:
      - columns
  interpolateFrames:
    field: bool
    default: true
    desc: |
      If enabled, the texture animation will use linear interpolation to mix frames when the frame index is not a whole number. For example, if the frame index is 0.5, enabling this will cause the average of the first two frames to be shown instead of just the first frame.

      If disabled, the frame index will be truncated to get a whole number.
    see:
      - frameIndex
      - frameIndexOffset
  bloomRed:
    field: float
    default: 1
    desc: |
      Controls the redness of the color of the additional bloom effect. The colors of the particle will be multiplied with this color to get the final color of the bloom effect.

      Note:
      - This has no effect if the "Effects Quality" setting is set to "Low".
      - This does not affect the natural bloom effect from high color values.
    see:
      - bloomGreen
      - bloomBlue
      - bloomStrength
  bloomGreen:
    field: float
    default: 1
    desc: |
      Controls the greenness of the color of the additional bloom effect. The colors of the particle will be multiplied with this color to get the final color of the bloom effect.

      Note:
      - This has no effect if the "Effects Quality" setting is set to "Low".
      - This does not affect the natural bloom effect from high color values.
    see:
      - bloomRed
      - bloomBlue
      - bloomStrength
  bloomBlue:
    field: float
    default: 1
    desc: |
      Controls the blueness of the color of the additional bloom effect. The colors of the particle will be multiplied with this color to get the final color of the bloom effect.

      Note:
      - This has no effect if the "Effects Quality" setting is set to "Low".
      - This does not affect the natural bloom effect from high color values.
    see:
      - bloomRed
      - bloomGreen
      - bloomStrength
  bloomStrength:
    field: float
    desc: |
      Controls the strength of the additional bloom effect.

      Note:
      - This has no effect if the "Effects Quality" setting is set to "Low".
      - This does not affect the natural bloom effect from high color values.
    see:
      - bloomRed
      - bloomGreen
      - bloomBlue
  minDistance:
    field: float
    default: -1
    desc: |
      Minimum view distance. If the particle is closer than this distance from the camera, it will be hidden. Can be set to -1 to disable the limit.
    see:
      - maxDistance
  maxDistance:
    field: float
    default: -1
    desc: |
      Maximum view distance. If the particle is farther away than this distance from the camera, it will be hidden. Can be set to -1 to disable the limit.
    see:
      - minDistance
  negativeDepthOffset:
    field: float
    desc: |
      Negative values will make the particle draw in front of objects closer to the camera, while positive values will make it draw behind objects farther away from the camera.
  shadowDarkness:
    field: float
    desc: |
      Controls how dark shaded parts of the particle are.
  specular:
    field: int
    desc: |
      Specular texture ID.
    see:
      - lighting
      - glossiness
      - specularity
  glossiness:
    field: float
    default: 0.25
    desc: |
      Controls how sharp the specular highlights are.
    see:
      - lighting
      - specular
      - specularity
  lighting:
    type: LightingMode
    field: int
    default: LightingMode.Unlit
    desc: |
      Controls how the particles are lit. See {@link LightingMode} for more information.
  specularity:
    field: float
    default: 0.5
    desc: |
      Controls how bright the specular highlights are.
    see:
      - lighting
      - specular
      - glossiness
  unk_ds3_f1_7:
    field: int
  unk_ds3_f1_11:
    field: int
  unk_ds3_f1_12:
    field: int
  unk_ds3_f1_13:
    field: float
    default: -1
  unk_ds3_f1_14:
    field: int
    default: 1
  unk_ds3_f1_15:
    field: int
  unk_ds3_f1_16:
    field: int
  unk_ds3_f2_0:
    field: int
  unk_ds3_f2_1:
    field: bool
  unk_ds3_f2_2:
    field: int
    default: 8
  unk_ds3_f2_3:
    field: int
  unk_ds3_f2_4:
    field: int
    default: 1
  unk_ds3_f2_9:
    field: int
  unk_ds3_f2_10:
    field: int
  unk_ds3_f2_11:
    field: int
  unk_ds3_f2_12:
    field: int
  unk_ds3_f2_13:
    field: int
  unkDistFadeClose0:
    field: float
    default: -1
  unkDistFadeClose1:
    field: float
    default: -1
  unkDistFadeFar0:
    field: float
    default: -1
  unkDistFadeFar1:
    field: float
    default: -1
  unk_ds3_f2_20:
    field: int
  unk_ds3_f2_21:
    field: int
  unk_ds3_f2_22:
    field: int
  unk_ds3_f2_23:
    field: int
  unk_ds3_f2_24:
    field: int
  unk_ds3_f2_25: # depth blend thing
    field: float
    default: 1
  unk_ds3_f2_27:
    field: int
    default: 1
  unk_ds3_f2_28:
    field: int
  unk_ds3_f2_29:
    field: float
    default: 5
  unk_ds3_p1_21:
    type: ScalarPropertyArg
  unk_ds3_p1_22:
    type: ScalarPropertyArg
  unk_ds3_p2_2:
    type: ScalarPropertyArg
  unk_ds3_p2_3:
    type: Vector4PropertyArg
    default: "[1, 1, 1, 1]"
  unk_ds3_p2_4:
    type: Vector4PropertyArg
    default: "[1, 1, 1, 1]"
  unk_ds3_p2_5:
    type: Vector4PropertyArg
    default: "[1, 1, 1, 1]"
  unk_ds3_p2_6:
    type: ScalarPropertyArg
  unk_sdt_f1_15:
    field: int
    default: 1
  unk_sdt_f1_16:
    field: int
    default: 1
  unk_sdt_f1_17:
    field: int
  unk_sdt_f2_31:
    field: int
  unk_sdt_f2_32:
    field: int
    default: 1
  unk_sdt_f2_36:
    field: int
    default: -2
  unk_sdt_f2_37:
    field: int
  unk_sdt_f2_39:
    field: int
    default: 1
  unk_sdt_f2_40:
    field: int
  unk_sdt_f2_41:
    field: int
  unk_sdt_f2_42:
    field: int
  unk_sdt_f2_43:
    field: int
  unk_sdt_f2_44:
    field: int
games:
  DS3:
    fields1:
      - orientation
      - texture
      - normalMap
      - blendMode
      - scaleVariationX
      - scaleVariationY
      - uniformScale
      - unk_ds3_f1_7
      - columns
      - totalFrames
      - interpolateFrames
      - unk_ds3_f1_11
      - unk_ds3_f1_12
      - unk_ds3_f1_13
      - unk_ds3_f1_14
      - unk_ds3_f1_15
      - unk_ds3_f1_16
    fields2:
      - unk_ds3_f2_0
      - unk_ds3_f2_1
      - unk_ds3_f2_2
      - unk_ds3_f2_3
      - unk_ds3_f2_4
      - bloomRed
      - bloomGreen
      - bloomBlue
      - bloomStrength
      - unk_ds3_f2_9
      - unk_ds3_f2_10
      - unk_ds3_f2_11
      - unk_ds3_f2_12
      - unk_ds3_f2_13
      - unkDistFadeClose0
      - unkDistFadeClose1
      - unkDistFadeFar0
      - unkDistFadeFar1
      - minDistance
      - maxDistance
      - unk_ds3_f2_20
      - unk_ds3_f2_21
      - unk_ds3_f2_22
      - unk_ds3_f2_23
      - unk_ds3_f2_24
      - unk_ds3_f2_25
      - negativeDepthOffset
      - unk_ds3_f2_27
      - unk_ds3_f2_28
      - unk_ds3_f2_29
    properties1:
      - offsetX
      - offsetY
      - offsetZ
      - width
      - height
      - color1
      - color2
      - color3
      - alphaThreshold
      - rotationX
      - rotationY
      - rotationZ
      - rotationSpeedX
      - rotationSpeedMultiplierX
      - rotationSpeedY
      - rotationSpeedMultiplierY
      - rotationSpeedZ
      - rotationSpeedMultiplierZ
      - depthOffset
      - frameIndex
      - frameIndexOffset
      - unk_ds3_p1_21
      - unk_ds3_p1_22
    properties2: &props2
      - rgbMultiplier
      - alphaMultiplier
      - unk_ds3_p2_2
      - unk_ds3_p2_3
      - unk_ds3_p2_4
      - unk_ds3_p2_5
      - unk_ds3_p2_6
  SDT:
    fields1:
      - orientation
      - normalMap
      - scaleVariationX
      - scaleVariationY
      - uniformScale
      - unk_ds3_f1_7
      - columns
      - totalFrames
      - interpolateFrames
      - unk_ds3_f1_11
      - unk_ds3_f1_12
      - unk_ds3_f1_13
      - unk_ds3_f1_14
      - unk_ds3_f1_15
      - unk_ds3_f1_16
      - unk_sdt_f1_15
      - unk_sdt_f1_16
      - unk_sdt_f1_17
    fields2:
      - unk_ds3_f2_0
      - unk_ds3_f2_1
      - unk_ds3_f2_2
      - unk_ds3_f2_3
      - unk_ds3_f2_4
      - bloomRed
      - bloomGreen
      - bloomBlue
      - bloomStrength
      - unk_ds3_f2_9
      - unk_ds3_f2_10
      - unk_ds3_f2_11
      - unk_ds3_f2_12
      - unk_ds3_f2_13
      - unkDistFadeClose0
      - unkDistFadeClose1
      - unkDistFadeFar0
      - unkDistFadeFar1
      - minDistance
      - maxDistance
      - unk_ds3_f2_20
      - unk_ds3_f2_21
      - unk_ds3_f2_22
      - unk_ds3_f2_23
      - unk_ds3_f2_24
      - unk_ds3_f2_25
      - negativeDepthOffset
      - unk_ds3_f2_27
      - unk_ds3_f2_28
      - unk_ds3_f2_29
      - shadowDarkness
      - unk_sdt_f2_31
      - unk_sdt_f2_32
      - specular
      - glossiness
      - lighting
      - unk_sdt_f2_36
      - unk_sdt_f2_37
      - specularity
      - unk_sdt_f2_39
      - unk_sdt_f2_40
      - unk_sdt_f2_41
      - unk_sdt_f2_42
      - unk_sdt_f2_43
      - unk_sdt_f2_44
    properties1:
      - texture
      - blendMode
      - offsetX
      - offsetY
      - offsetZ
      - width
      - height
      - color1
      - color2
      - color3
      - alphaThreshold
      - rotationX
      - rotationY
      - rotationZ
      - rotationSpeedX
      - rotationSpeedMultiplierX
      - rotationSpeedY
      - rotationSpeedMultiplierY
      - rotationSpeedZ
      - rotationSpeedMultiplierZ
      - depthOffset
      - frameIndex
      - frameIndexOffset
      - unk_ds3_p1_21
      - unk_ds3_p1_22
    properties2: *props2
  ER: SDT
  AC6: SDT
