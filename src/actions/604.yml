type: 604
name: MultiTextureBillboardEx
slot: Appearance
meta:
  isAppearance: true
  isParticle: true
desc: |
  Particle with multiple textures that can scroll.
properties:
  blendMode:
    type: BlendMode | ScalarProperty
    field: int
    enum: BlendMode
    default: BlendMode.Normal
    argument: Constant0
    desc: |
      Blend mode.
  offsetX:
    type: ScalarValue
    argument: ParticleAge
    scale: true
    desc: |
      X position offset.
  offsetY:
    type: ScalarValue
    argument: ParticleAge
    scale: true
    desc: |
      Y position offset.
  offsetZ:
    type: ScalarValue
    argument: ParticleAge
    scale: true
    desc: |
      Z position offset.
  width:
    type: ScalarValue
    default: 1
    argument: ParticleAge
    scale: instanceSize
    desc: |
      The width of the particle.

      If {@link uniformScale} is enabled, this also controls the height.
  height:
    type: ScalarValue
    default: 1
    argument: ParticleAge
    scale: instanceSize
    desc: |
      The height of the particle.

      If {@link uniformScale} is enabled, {@link width} also controls the height, and this property is ignored.
  rotationX:
    type: ScalarValue
    argument: Constant0
    desc: |
      Rotation around the X-axis in degrees.
    see:
      - angularSpeedX
      - angularSpeedMultiplierX
  rotationY:
    type: ScalarValue
    argument: Constant0
    desc: |
      Rotation around the Y-axis in degrees.
    see:
      - angularSpeedY
      - angularSpeedMultiplierY
  rotationZ:
    type: ScalarValue
    argument: Constant0
    desc: |
      Rotation around the Z-axis in degrees.
    see:
      - angularSpeedZ
      - angularSpeedMultiplierZ
  angularSpeedX:
    type: ScalarValue
    argument: ParticleAge
    time: true
    desc: |
      Angular speed around the X-axis in degrees per second.
    see:
      - rotationX
      - angularSpeedMultiplierX
  angularSpeedMultiplierX:
    type: ScalarValue
    default: 1
    argument: ParticleAge
    desc: |
      Multiplier for {@link angularSpeedX}.
    see:
      - rotationX
  angularSpeedY:
    type: ScalarValue
    argument: ParticleAge
    time: true
    desc: |
      Angular speed around the Y-axis in degrees per second.
    see:
      - rotationY
      - angularSpeedMultiplierY
  angularSpeedMultiplierY:
    type: ScalarValue
    default: 1
    argument: ParticleAge
    desc: |
      Multiplier for {@link angularSpeedY}.
    see:
      - rotationY
  angularSpeedZ:
    type: ScalarValue
    argument: ParticleAge
    time: true
    desc: |
      Angular speed around the Z-axis in degrees per second.
    see:
      - rotationZ
      - angularSpeedMultiplierZ
  angularSpeedMultiplierZ:
    type: ScalarValue
    default: 1
    argument: ParticleAge
    desc: |
      Multiplier for {@link angularSpeedZ}.
    see:
      - rotationZ
  color1:
    type: Vector4Value
    components: 4
    default: [1, 1, 1, 1]
    argument: ParticleAge
    color: true
    desc: |
      Color multiplier for the particle.

      Values in this will be clamped to the 0-1 range. To use values outside of this range, see {@link color3}.
    see:
      - color2
      - color3
  color2:
    type: Vector4Value
    components: 4
    default: [1, 1, 1, 1]
    argument: EmissionTime
    color: true
    desc: |
      Color multiplier for the particle.

      Values in this will be clamped to the 0-1 range. There is no equivalent property with unrestricted values based on the emission time of the particle, but {@link color3} is still multiplicative with this and can be used to scale the values indirectly.
    see:
      - color1
      - color3
  color3:
    type: Vector4Value
    components: 4
    default: [1, 1, 1, 1]
    argument: ParticleAge
    color: primary
    desc: |
      Color multiplier for the particle.

      Values in this are unrestricted and can go above 1. If you want values to be clamped to the 0-1 range, see {@link color1}.
    see:
      - color1
      - color2
  layer1Color:
    type: Vector4Value
    components: 4
    default: [1, 1, 1, 1]
    argument: ParticleAge
    color: true
    desc: |
      Color multiplier for Layer 1.

      Values in this will be clamped to the 0-1 range.
  layer2Color:
    type: Vector4Value
    components: 4
    default: [1, 1, 1, 1]
    argument: ParticleAge
    color: true
    desc: |
      Color multiplier for Layer 2.

      Values in this will be clamped to the 0-1 range.
  layer3Color:
    type: Vector4Value
    components: 4
    default: [1, 1, 1, 1]
    argument: ParticleAge
    color: true
    desc: |
      Color multiplier for Layer 3.

      Values in this will be clamped to the 0-1 range.
  alphaFadeThreshold:
    type: ScalarValue
    argument: ParticleAge
    desc: |
      Parts of the particle with less opacity than this threshold will be invisible. The range is 0-255.

      Values above this threshold will be stretched to fill the alpha range, so values near the threshold will be less visible, creating a smooth transition between the parts that have been hidden by the threshold and the ones that are still visible.
  frameIndex:
    type: ScalarValue
    argument: ParticleAge
    desc: |
      The index of the frame to show from the texture atlas. Can be animated using a {@link PropertyFunction.Linear linear property} or similar.

      Seemingly identical to {@link frameIndexOffset}? The sum of these two properties is the actual frame index that gets used.
  frameIndexOffset:
    type: ScalarValue
    argument: ParticleAge
    desc: |
      Seemingly identical to {@link frameIndex}? The sum of these two properties is the actual frame index that gets used.
  layer1SpeedU:
    type: ScalarValue
    argument: ParticleAge
    desc: |
      Horiztonal scroll speed for Layer 1.
  layer1SpeedV:
    type: ScalarValue
    argument: ParticleAge
    desc: |
      Vertical scroll speed for Layer 1.
  layer1OffsetU:
    type: ScalarValue
    argument: Constant0
    desc: |
      Horizontal offset for the UV coordinates of Layer 1.
  layer1OffsetV:
    type: ScalarValue
    argument: Constant0
    desc: |
      Vertical offset for the UV coordinates of Layer 1.
  layer1ScaleU:
    type: ScalarValue
    default: 1
    argument: ParticleAge
    desc: |
      Horizontal scale for the UV coordinates of Layer 1.
  layer1ScaleV:
    type: ScalarValue
    default: 1
    argument: ParticleAge
    desc: |
      Vertical scale for the UV coordinates of Layer 1.
  layer2SpeedU:
    type: ScalarValue
    argument: ParticleAge
    desc: |
      Horiztonal scroll speed for Layer 2.
  layer2SpeedV:
    type: ScalarValue
    argument: ParticleAge
    desc: |
      Vertical scroll speed for Layer 2.
  layer2OffsetU:
    type: ScalarValue
    argument: Constant0
    desc: |
      Horizontal offset for the UV coordinates of Layer 2.
  layer2OffsetV:
    type: ScalarValue
    argument: Constant0
    desc: |
      Vertical offset for the UV coordinates of Layer 2.
  layer2ScaleU:
    type: ScalarValue
    default: 1
    argument: ParticleAge
    desc: |
      Horizontal scale for the UV coordinates of Layer 2.
  layer2ScaleV:
    type: ScalarValue
    default: 1
    argument: ParticleAge
    desc: |
      Vertical scale for the UV coordinates of Layer 2.
  layer3SpeedU:
    type: ScalarValue
    argument: ParticleAge
    desc: |
      Horiztonal scroll speed for Layer 3.
  layer3SpeedV:
    type: ScalarValue
    argument: ParticleAge
    desc: |
      Vertical scroll speed for Layer 3.
  layer3OffsetU:
    type: ScalarValue
    argument: Constant0
    desc: |
      Horizontal offset for the UV coordinates of Layer 3.
  layer3OffsetV:
    type: ScalarValue
    argument: Constant0
    desc: |
      Vertical offset for the UV coordinates of Layer 3.
  layer3ScaleU:
    type: ScalarValue
    default: 1
    argument: ParticleAge
    desc: |
      Horizontal scale for the UV coordinates of Layer 3.
  layer3ScaleV:
    type: ScalarValue
    default: 1
    argument: ParticleAge
    desc: |
      Vertical scale for the UV coordinates of Layer 3.
  rgbMultiplier:
    type: ScalarValue
    default: 1
    argument: ActiveTime
    desc: |
      Scalar multiplier for the color that does not affect the alpha. Effectively a brightness multiplier.
  alphaMultiplier:
    type: ScalarValue
    default: 1
    argument: ActiveTime
    desc: |
      Alpha multiplier.
  unk_ds3_p2_2:
    type: ScalarValue
  unk_ds3_p2_3:
    type: Vector4Value
    components: 4
    default: [1, 1, 1, 1]
  unk_ds3_p2_4:
    type: Vector4Value
    components: 4
    default: [1, 1, 1, 1]
  unk_ds3_p2_5:
    type: Vector4Value
    components: 4
    default: [1, 1, 1, 1]
  alphaThreshold:
    type: ScalarValue
    argument: ActiveTime
    desc: |
      Parts of the particle with less opacity than this threshold will be invisible. The range is 0-255.

      This threshold creates a hard cut-off between visible and not visible, which is unlike the {@link alphaFadeThreshold}.
  orientation:
    type: OrientationMode
    field: int
    enum: OrientationMode
    default: OrientationMode.CameraPlane
    desc: |
      Controls the orientation mode for the particles. See {@link OrientationMode} for more information.
  layer1:
    field: int
    default: 1
    resource: texture
    textureType: a
    desc: |
      Layer 1 texture ID.
  layer2:
    field: int
    default: 1
    resource: texture
    textureType: a
    desc: |
      Layer 2 texture ID.
  layer3:
    field: int
    default: 1
    resource: texture
    textureType: a
    desc: |
      Layer 3 texture ID.
  uniformScale:
    field: bool
    default: false
    desc: |
      If enabled, the particle width-related properties and fields will control both the width and height of the particles, and the height counterparts will be ignored.
    see:
      - width
      - height
  unk_ds3_f1_6:
    field: int
  columns:
    field: int
    default: 1
    desc: |
      To split the texture into multiple animation frames, this value must be set to the number of columns in the texture. It should equal `textureWidth / frameWidth`.
    see:
      - totalFrames
  totalFrames:
    field: int
    default: 1
    desc: |
      To split the texture into multiple animation frames, this value must be set to the total number of frames in the texture.
    see:
      - columns
  interpolateFrames:
    field: bool
    default: true
    desc: |
      If enabled, the texture animation will use linear interpolation to mix frames when the frame index is not a whole number. For example, if the frame index is 0.5, enabling this will cause the average of the first two frames to be shown instead of just the first frame.

      If disabled, the frame index will be truncated to get a whole number.
    see:
      - frameIndex
      - frameIndexOffset
  unk_ds3_f1_10:
    field: int
    default: -2
  unk_ds3_f1_11:
    field: int
    default: -2
  depthBlend:
    field: bool
    default: true
    desc: |
      Controls how the particles should render when behind something else. If disabled, the particles will simply be drawn behind anything they are behind in the world. If enabled, they will instead display in front of the object if they are close enough, and will fade out with distance from the object's surface that is blocking the view of the particle.
  octagonal:
    field: bool
    default: false
    desc: |
      Controls the shape of the particles. If disabled, the particles will be rectangular. If enabled, they will be octagonal.
  unk_ds3_f1_14:
    field: int
  unk_er_f1_14:
    field: int
    default: 1
  unk_er_f1_15:
    field: int
    default: 1
  unk_er_f1_16:
    field: int
  unk_ds3_f2_0:
    field: int
  unk_ds3_f2_1:
    field: int
  unk_ds3_f2_2:
    field: int
    default: 8
  unk_ds3_f2_3:
    field: float
  bloom:
    field: bool
    default: true
    desc: |
      Controls whether or not the particles have an additional bloom effect controlled by {@link bloomColor}.

      Note:
      - This has no effect if the "Effects Quality" setting is set to "Low".
      - This does not affect the natural bloom effect from high color values.
    see:
      - bloomColor
  bloomColor:
    field: vec4
    components: 4
    default: [1, 1, 1, 0]
    color: true
    desc: |
      Controls the color of the additional bloom effect. The colors of the particle will be multiplied with this color to get the final color of the bloom effect.

      Note:
      - This has no effect if the "Effects Quality" setting is set to "Low".
      - This does not affect the natural bloom effect from high color values.
    see:
      - bloom
  unk_ds3_f2_9:
    field: float
  unk_ds3_f2_10:
    field: int
  unk_ds3_f2_11:
    field: int
  unk_ds3_f2_12:
    field: int
  unk_ds3_f2_13:
    field: int
  minFadeDistance:
    field: float
    default: -1
    scale: distanceIfNotMinusOne
    desc: |
      This controls a point where the opacity of a particle will start to fade to 0 near the {@link minDistance minimum view distance}. At {@link minDistance}, the opacity will be 0, and it will linearly approach 1 as the distance between the camera and the particle approaches this distance.

      This requires {@link minDistance} to be set to a positive value or 0. This distance limit can be disabled by setting this and minDistance to -1.
    see:
      - minDistance
      - maxFadeDistance
      - maxDistance
      - minDistanceThreshold
      - maxDistanceThreshold
  minDistance:
    field: float
    default: -1
    scale: distanceIfNotMinusOne
    desc: |
      Minimum view distance. If a particle is closer than this distance from the camera, it will be hidden. Can be set to -1 to disable the limit.

      This requires {@link minFadeDistance} to be set to a positive value or 0.

      This is different from {@link minDistanceThreshold}, as this controls the start of a distance range that has smooth transitions at each end, while the threshold value is a hard cut-off.
    see:
      - minFadeDistance
      - maxFadeDistance
      - maxDistance
      - minDistanceThreshold
      - maxDistanceThreshold
  maxFadeDistance:
    field: float
    default: -1
    scale: distanceIfNotMinusOne
    desc: |
      This controls a point where the opacity of a particle will start to fade to 0 near the {@link maxDistance maximum view distance}. At {@link maxDistance}, the opacity will be 0, and it will linearly approach 1 as the distance between the camera and the particle approaches this distance.

      This requires {@link maxDistance} to be set to a positive value or 0. This distance limit can be disabled by setting this and minDistance to -1.
    see:
      - minFadeDistance
      - minDistance
      - maxDistance
      - minDistanceThreshold
      - maxDistanceThreshold
  maxDistance:
    field: float
    default: -1
    scale: distanceIfNotMinusOne
    desc: |
      Minimum view distance. If a particle is farther away than this distance from the camera, it will be hidden. Can be set to -1 to disable the limit.

      This requires {@link maxFadeDistance} to be set to a positive value or 0.

      This is different from {@link maxDistanceThreshold}, as this controls the start of a distance range that has smooth transitions at each end, while the threshold value is a hard cut-off.
    see:
      - minFadeDistance
      - minDistance
      - maxFadeDistance
      - minDistanceThreshold
      - maxDistanceThreshold
  minDistanceThreshold:
    field: float
    default: -1
    scale: distanceIfNotMinusOne
    desc: |
      A hard cut-off point for the distance between the camera and the particle. If a particle is closer than this distance from the camera, it will be hidden. Can be set to -1 to disable the limit.
    see:
      - minFadeDistance
      - minDistance
      - maxFadeDistance
      - maxDistance
      - maxDistanceThreshold
  maxDistanceThreshold:
    field: float
    default: -1
    scale: distanceIfNotMinusOne
    desc: |
      A hard cut-off point for the distance between the camera and the particle. If a particle is farther away than this distance from the camera, it will be hidden. Can be set to -1 to disable the limit.
    see:
      - minFadeDistance
      - minDistance
      - maxFadeDistance
      - maxDistance
      - minDistanceThreshold
  unk_ds3_f2_20:
    field: int
  unk_ds3_f2_21:
    field: int
  unk_ds3_f2_22:
    field: int
  unk_ds3_f2_23:
    field: int
  unk_ds3_f2_24:
    field: int
  unkDepthBlend1:
    field: float
    default: 1
  unkDepthBlend2:
    field: float
    scale: distance
  unk_ds3_f2_27:
    field: int
    default: 1
  unk_ds3_f2_28:
    field: int
  unk_ds3_f2_29:
    field: float
    scale: distance
    desc: |
      Unknown float.

      This seems to be some sort of distance threshold. When the camera is within this distance, some things will look different in some ways. For example, when within the distance and the {@link blendMode blend mode} is set to {@link BlendMode.Subtract}, the opacity doesn't work the way it normally does. Other effects have been found as well, but what exactly this threshold is for is unknown.
  shadowDarkness:
    field: float
    desc: |
      Controls how dark shaded parts of the particle are.
  unk_sdt_f2_31:
    field: int
  unk_sdt_f2_32:
    field: int
    desc: |
      Unknown integer.

      When set to 1, it seems to stop {@link unk_ds3_f2_29} from doing whatever it is doing, and it can also cause some ugly "outline" effects on things seen through particles.
  specular:
    field: int
    resource: texture
    textureType: 3m
    desc: |
      Specular texture ID.
    see:
      - lighting
      - glossiness
  glossiness:
    field: float
    default: 0.25
    desc: |
      Controls how sharp the specular highlights are.
    see:
      - lighting
      - specular
  lighting:
    field: int
    enum: LightingMode
    default: LightingMode.Unlit
    desc: |
      Controls how the particles are lit. See {@link LightingMode} for more information.
  unk_sdt_f2_36:
    field: int
    default: -2
  unk_sdt_f2_37:
    field: int
  unk_sdt_f2_38:
    field: int
    default: 1
  unk_sdt_f2_39:
    field: int
    default: 1
  unk_sdt_f2_40:
    field: int
  unk_sdt_f2_41:
    field: int
  unk_er_f2_42:
    field: int
  unk_er_f2_43:
    field: int
  unk_er_f2_44:
    field: float
  unk_er_f2_45:
    field: int
  unk_ac6_f2_46:
    field: int
games:
  DS3:
    fields1:
      - orientation
      - layer1
      - layer2
      - layer3
      - blendMode
      - uniformScale
      - unk_ds3_f1_6
      - columns
      - totalFrames
      - interpolateFrames
      - unk_ds3_f1_10
      - unk_ds3_f1_11
      - depthBlend
      - octagonal
      - unk_ds3_f1_14
    fields2:
      - unk_ds3_f2_0
      - unk_ds3_f2_1
      - unk_ds3_f2_2
      - unk_ds3_f2_3
      - bloom
      - bloomColor
      #
      #
      #
      - unk_ds3_f2_9
      - unk_ds3_f2_10
      - unk_ds3_f2_11
      - unk_ds3_f2_12
      - unk_ds3_f2_13
      - minFadeDistance
      - minDistance
      - maxFadeDistance
      - maxDistance
      - minDistanceThreshold
      - maxDistanceThreshold
      - unk_ds3_f2_20
      - unk_ds3_f2_21
      - unk_ds3_f2_22
      - unk_ds3_f2_23
      - unk_ds3_f2_24
      - unkDepthBlend1
      - unkDepthBlend2
      - unk_ds3_f2_27
      - unk_ds3_f2_28
      - unk_ds3_f2_29
    properties1:
      - offsetX
      - offsetY
      - offsetZ
      - width
      - height
      - rotationX
      - rotationY
      - rotationZ
      - angularSpeedX
      - angularSpeedMultiplierX
      - angularSpeedY
      - angularSpeedMultiplierY
      - angularSpeedZ
      - angularSpeedMultiplierZ
      - color1
      - color2
      - color3
      - layer1Color
      - layer2Color
      - layer3Color
      - alphaFadeThreshold
      - frameIndex
      - frameIndexOffset
      - layer1SpeedU
      - layer1SpeedV
      - layer1OffsetU
      - layer1OffsetV
      - layer1ScaleU
      - layer1ScaleV
      - layer2SpeedU
      - layer2SpeedV
      - layer2OffsetU
      - layer2OffsetV
      - layer2ScaleU
      - layer2ScaleV
      - layer3SpeedU
      - layer3SpeedV
      - layer3OffsetU
      - layer3OffsetV
      - layer3ScaleU
      - layer3ScaleV
    properties2:
      - rgbMultiplier
      - alphaMultiplier
      - unk_ds3_p2_2
      - unk_ds3_p2_3
      - unk_ds3_p2_4
      - unk_ds3_p2_5
      - alphaThreshold
  SDT:
    fields1:
      - orientation
      - layer1
      - layer2
      - layer3
      - uniformScale
      - unk_ds3_f1_6
      - columns
      - totalFrames
      - interpolateFrames
      - unk_ds3_f1_10
      - unk_ds3_f1_11
      - depthBlend
      - octagonal
      - unk_ds3_f1_14
    fields2:
      - unk_ds3_f2_0
      - unk_ds3_f2_1
      - unk_ds3_f2_2
      - unk_ds3_f2_3
      - bloom
      - bloomColor
      #
      #
      #
      - unk_ds3_f2_9
      - unk_ds3_f2_10
      - unk_ds3_f2_11
      - unk_ds3_f2_12
      - unk_ds3_f2_13
      - minFadeDistance
      - minDistance
      - maxFadeDistance
      - maxDistance
      - minDistanceThreshold
      - maxDistanceThreshold
      - unk_ds3_f2_20
      - unk_ds3_f2_21
      - unk_ds3_f2_22
      - unk_ds3_f2_23
      - unk_ds3_f2_24
      - unkDepthBlend1
      - unkDepthBlend2
      - unk_ds3_f2_27
      - unk_ds3_f2_28
      - unk_ds3_f2_29
      - shadowDarkness
      - unk_sdt_f2_31
      - unk_sdt_f2_32
      - specular
      - glossiness
      - lighting
      - unk_sdt_f2_36
      - unk_sdt_f2_37
      - unk_sdt_f2_38
      - unk_sdt_f2_39
      - unk_sdt_f2_40
      - unk_sdt_f2_41
    properties1:
      - blendMode
      - offsetX
      - offsetY
      - offsetZ
      - width
      - height
      - rotationX
      - rotationY
      - rotationZ
      - angularSpeedX
      - angularSpeedMultiplierX
      - angularSpeedY
      - angularSpeedMultiplierY
      - angularSpeedZ
      - angularSpeedMultiplierZ
      - color1
      - color2
      - color3
      - layer1Color
      - layer2Color
      - layer3Color
      - alphaFadeThreshold
      - frameIndex
      - frameIndexOffset
      - layer1SpeedU
      - layer1SpeedV
      - layer1OffsetU
      - layer1OffsetV
      - layer1ScaleU
      - layer1ScaleV
      - layer2SpeedU
      - layer2SpeedV
      - layer2OffsetU
      - layer2OffsetV
      - layer2ScaleU
      - layer2ScaleV
      - layer3SpeedU
      - layer3SpeedV
      - layer3OffsetU
      - layer3OffsetV
      - layer3ScaleU
      - layer3ScaleV
    properties2: DS3
  ER:
    fields1:
      - orientation
      - layer1
      - layer2
      - layer3
      - uniformScale
      - unk_ds3_f1_6
      - columns
      - totalFrames
      - interpolateFrames
      - unk_ds3_f1_10
      - unk_ds3_f1_11
      - depthBlend
      - octagonal
      - unk_ds3_f1_14
      - unk_er_f1_14
      - unk_er_f1_15
      - unk_er_f1_16
    fields2:
      - unk_ds3_f2_0
      - unk_ds3_f2_1
      - unk_ds3_f2_2
      - unk_ds3_f2_3
      - bloom
      - bloomColor
      #
      #
      #
      - unk_ds3_f2_9
      - unk_ds3_f2_10
      - unk_ds3_f2_11
      - unk_ds3_f2_12
      - unk_ds3_f2_13
      - minFadeDistance
      - minDistance
      - maxFadeDistance
      - maxDistance
      - minDistanceThreshold
      - maxDistanceThreshold
      - unk_ds3_f2_20
      - unk_ds3_f2_21
      - unk_ds3_f2_22
      - unk_ds3_f2_23
      - unk_ds3_f2_24
      - unkDepthBlend1
      - unkDepthBlend2
      - unk_ds3_f2_27
      - unk_ds3_f2_28
      - unk_ds3_f2_29
      - shadowDarkness
      - unk_sdt_f2_31
      - unk_sdt_f2_32
      - specular
      - glossiness
      - lighting
      - unk_sdt_f2_36
      - unk_sdt_f2_37
      - unk_sdt_f2_38
      - unk_sdt_f2_39
      - unk_sdt_f2_40
      - unk_sdt_f2_41
      - unk_er_f2_42
      - unk_er_f2_43
      - unk_er_f2_44
      - unk_er_f2_45
    properties1: SDT
    properties2: DS3
  AC6:
    fields1: ER
    fields2:
      - unk_ds3_f2_0
      - unk_ds3_f2_1
      - unk_ds3_f2_2
      - unk_ds3_f2_3
      - bloom
      - bloomColor
      #
      #
      #
      - unk_ds3_f2_9
      - unk_ds3_f2_10
      - unk_ds3_f2_11
      - unk_ds3_f2_12
      - unk_ds3_f2_13
      - minFadeDistance
      - minDistance
      - maxFadeDistance
      - maxDistance
      - minDistanceThreshold
      - maxDistanceThreshold
      - unk_ds3_f2_20
      - unk_ds3_f2_21
      - unk_ds3_f2_22
      - unk_ds3_f2_23
      - unk_ds3_f2_24
      - unkDepthBlend1
      - unkDepthBlend2
      - unk_ds3_f2_27
      - unk_ds3_f2_28
      - unk_ds3_f2_29
      - shadowDarkness
      - unk_sdt_f2_31
      - unk_sdt_f2_32
      - specular
      - glossiness
      - lighting
      - unk_sdt_f2_36
      - unk_sdt_f2_37
      - unk_sdt_f2_38
      - unk_sdt_f2_39
      - unk_sdt_f2_40
      - unk_sdt_f2_41
      - unk_er_f2_42
      - unk_er_f2_43
      - unk_er_f2_44
      - unk_er_f2_45
      - unk_ac6_f2_46
    properties1: SDT
    properties2: DS3
