type: 10014
name: LensFlare
slot: Appearance
desc: |
  Creates lens flares with up to 4 textured layers with different colors and sizes.
properties:
  layer1:
    field: int
    default: 1
    resource: texture
    textureType: a
    desc: |
      Layer 1 texture ID.
  layer1Width:
    type: ScalarValue
    default: 1
    scale: true
    desc: |
      Layer 1 width.
  layer1Height:
    type: ScalarValue
    default: 1
    scale: true
    desc: |
      Layer 1 height.
  layer1Color:
    type: Vector4Value
    default: [1, 1, 1, 1]
    desc: |
      Layer 1 color.
  layer1Count:
    field: int
    default: 1
    desc: |
      Number of copies of layer 1. Why this exists is unknown, they all just stack on top of each other.

      Each copy will pick its own random values for the scale variation.
    see:
      - layer1ScaleVariationX
      - layer1ScaleVariationY
  layer1ScaleVariationX:
    field: float
    default: 1
    desc: |
      The {@link layer1Width layer's width} is multiplied by a random value between this and 1.
    see:
      - layer1Count
      - layer1UniformScale
      - layer1ScaleVariationY
  layer1ScaleVariationY:
    field: float
    default: 1
    desc: |
      The {@link layer1Height layer's height} is multiplied by a random value between this and 1.
    see:
      - layer1Count
      - layer1UniformScale
      - layer1ScaleVariationX
  layer1UniformScale:
    field: bool
    default: false
    desc: |
      When enabled, the {@link layer1Width layer's width} also controls the {@link layer1Height height}, and the height property is ignored. The same is also true for the scale variation fields.
    see:
      - layer1Width
      - layer1Height
      - layer1ScaleVariationX
      - layer1ScaleVariationX
  layer1RedMultiplier:
    field: float
    default: 1
    desc: |
      Multiplier for the red value of the {@link layer1Color layer's color}.
    see:
      - layer1Color
      - layer1GreenMultiplier
      - layer1BlueMultiplier
      - layer1AlphaMultiplier
  layer1GreenMultiplier:
    field: float
    default: 1
    desc: |
      Multiplier for the green value of the {@link layer1Color layer's color}.
    see:
      - layer1Color
      - layer1RedMultiplier
      - layer1BlueMultiplier
      - layer1AlphaMultiplier
  layer1BlueMultiplier:
    field: float
    default: 1
    desc: |
      Multiplier for the blue value of the {@link layer1Color layer's color}.
    see:
      - layer1Color
      - layer1RedMultiplier
      - layer1GreenMultiplier
      - layer1AlphaMultiplier
  layer1AlphaMultiplier:
    field: float
    default: 1
    desc: |
      Multiplier for the alpha value of the {@link layer1Color layer's color}.
    see:
      - layer1Color
      - layer1RedMultiplier
      - layer1GreenMultiplier
      - layer1BlueMultiplier
  layer1BloomRed:
    field: float
    default: 1
    desc: |
      The red value of the bloom color for layer 1. This is multiplied with the {@link layer1Color layer's color} to get the final color for the bloom.
    see:
      - layer1Color
      - layer1BloomGreen
      - layer1BloomBlue
      - layer1BloomAlpha
  layer1BloomGreen:
    field: float
    default: 1
    desc: |
      The green value of the bloom color for layer 1. This is multiplied with the {@link layer1Color layer's color} to get the final color for the bloom.
    see:
      - layer1Color
      - layer1BloomRed
      - layer1BloomBlue
      - layer1BloomAlpha
  layer1BloomBlue:
    field: float
    default: 1
    desc: |
      The blue value of the bloom color for layer 1. This is multiplied with the {@link layer1Color layer's color} to get the final color for the bloom.
    see:
      - layer1Color
      - layer1BloomRed
      - layer1BloomGreen
      - layer1BloomAlpha
  layer1BloomAlpha:
    field: float
    default: 1
    desc: |
      The alpha value of the bloom color for layer 1. This is multiplied with the {@link layer1Color layer's color} to get the final color for the bloom.
    see:
      - layer1Color
      - layer1BloomRed
      - layer1BloomGreen
      - layer1BloomBlue
  layer2:
    field: int
    default: 0
    resource: texture
    textureType: a
    desc: |
      Layer 2 texture ID.
  layer2Width:
    type: ScalarValue
    default: 1
    scale: true
    desc: |
      Layer 2 width.
  layer2Height:
    type: ScalarValue
    default: 1
    scale: true
    desc: |
      Layer 2 height.
  layer2Color:
    type: Vector4Value
    default: [1, 1, 1, 1]
    desc: |
      Layer 2 color.
  layer2Count:
    field: int
    default: 1
    desc: |
      Number of copies of layer 2. Why this exists is unknown, they all just stack on top of each other.

      Each copy will pick its own random values for the scale variation.
    see:
      - layer2ScaleVariationX
      - layer2ScaleVariationY
  layer2ScaleVariationX:
    field: float
    default: 1
    desc: |
      The {@link layer2Width layer's width} is multiplied by a random value between this and 1.
    see:
      - layer2Count
      - layer2UniformScale
      - layer2ScaleVariationY
  layer2ScaleVariationY:
    field: float
    default: 1
    desc: |
      The {@link layer2Height layer's height} is multiplied by a random value between this and 1.
    see:
      - layer2Count
      - layer2UniformScale
      - layer2ScaleVariationX
  layer2UniformScale:
    field: bool
    default: false
    desc: |
      When enabled, the {@link layer2Width layer's width} also controls the {@link layer2Height height}, and the height property is ignored. The same is also true for the scale variation fields.
    see:
      - layer2Width
      - layer2Height
      - layer2ScaleVariationX
      - layer2ScaleVariationX
  layer2RedMultiplier:
    field: float
    default: 1
    desc: |
      Multiplier for the red value of the {@link layer2Color layer's color}.
    see:
      - layer2Color
      - layer2GreenMultiplier
      - layer2BlueMultiplier
      - layer2AlphaMultiplier
  layer2GreenMultiplier:
    field: float
    default: 1
    desc: |
      Multiplier for the green value of the {@link layer2Color layer's color}.
    see:
      - layer2Color
      - layer2RedMultiplier
      - layer2BlueMultiplier
      - layer2AlphaMultiplier
  layer2BlueMultiplier:
    field: float
    default: 1
    desc: |
      Multiplier for the blue value of the {@link layer2Color layer's color}.
    see:
      - layer2Color
      - layer2RedMultiplier
      - layer2GreenMultiplier
      - layer2AlphaMultiplier
  layer2AlphaMultiplier:
    field: float
    default: 1
    desc: |
      Multiplier for the alpha value of the {@link layer2Color layer's color}.
    see:
      - layer2Color
      - layer2RedMultiplier
      - layer2GreenMultiplier
      - layer2BlueMultiplier
  layer2BloomRed:
    field: float
    default: 1
    desc: |
      The red value of the bloom color for layer 2. This is multiplied with the {@link layer2Color layer's color} to get the final color for the bloom.
    see:
      - layer2Color
      - layer2BloomGreen
      - layer2BloomBlue
      - layer2BloomAlpha
  layer2BloomGreen:
    field: float
    default: 1
    desc: |
      The green value of the bloom color for layer 2. This is multiplied with the {@link layer2Color layer's color} to get the final color for the bloom.
    see:
      - layer2Color
      - layer2BloomRed
      - layer2BloomBlue
      - layer2BloomAlpha
  layer2BloomBlue:
    field: float
    default: 1
    desc: |
      The blue value of the bloom color for layer 2. This is multiplied with the {@link layer2Color layer's color} to get the final color for the bloom.
    see:
      - layer2Color
      - layer2BloomRed
      - layer2BloomGreen
      - layer2BloomAlpha
  layer2BloomAlpha:
    field: float
    default: 1
    desc: |
      The alpha value of the bloom color for layer 2. This is multiplied with the {@link layer2Color layer's color} to get the final color for the bloom.
    see:
      - layer2Color
      - layer2BloomRed
      - layer2BloomGreen
      - layer2BloomBlue
  layer3:
    field: int
    default: 0
    resource: texture
    textureType: a
    desc: |
      Layer 3 texture ID.
  layer3Width:
    type: ScalarValue
    default: 1
    scale: true
    desc: |
      Layer 3 width.
  layer3Height:
    type: ScalarValue
    default: 1
    scale: true
    desc: |
      Layer 3 height.
  layer3Color:
    type: Vector4Value
    default: [1, 1, 1, 1]
    desc: |
      Layer 3 color.
  layer3Count:
    field: int
    default: 1
    desc: |
      Number of copies of layer 3. Why this exists is unknown, they all just stack on top of each other.

      Each copy will pick its own random values for the scale variation.
    see:
      - layer3ScaleVariationX
      - layer3ScaleVariationY
  layer3ScaleVariationX:
    field: float
    default: 1
    desc: |
      The {@link layer3Width layer's width} is multiplied by a random value between this and 1.
    see:
      - layer3Count
      - layer3UniformScale
      - layer3ScaleVariationY
  layer3ScaleVariationY:
    field: float
    default: 1
    desc: |
      The {@link layer3Height layer's height} is multiplied by a random value between this and 1.
    see:
      - layer3Count
      - layer3UniformScale
      - layer3ScaleVariationX
  layer3UniformScale:
    field: bool
    default: false
    desc: |
      When enabled, the {@link layer3Width layer's width} also controls the {@link layer3Height height}, and the height property is ignored. The same is also true for the scale variation fields.
    see:
      - layer3Width
      - layer3Height
      - layer3ScaleVariationX
      - layer3ScaleVariationX
  layer3RedMultiplier:
    field: float
    default: 1
    desc: |
      Multiplier for the red value of the {@link layer3Color layer's color}.
    see:
      - layer3Color
      - layer3GreenMultiplier
      - layer3BlueMultiplier
      - layer3AlphaMultiplier
  layer3GreenMultiplier:
    field: float
    default: 1
    desc: |
      Multiplier for the green value of the {@link layer3Color layer's color}.
    see:
      - layer3Color
      - layer3RedMultiplier
      - layer3BlueMultiplier
      - layer3AlphaMultiplier
  layer3BlueMultiplier:
    field: float
    default: 1
    desc: |
      Multiplier for the blue value of the {@link layer3Color layer's color}.
    see:
      - layer3Color
      - layer3RedMultiplier
      - layer3GreenMultiplier
      - layer3AlphaMultiplier
  layer3AlphaMultiplier:
    field: float
    default: 1
    desc: |
      Multiplier for the alpha value of the {@link layer3Color layer's color}.
    see:
      - layer3Color
      - layer3RedMultiplier
      - layer3GreenMultiplier
      - layer3BlueMultiplier
  layer3BloomRed:
    field: float
    default: 1
    desc: |
      The red value of the bloom color for layer 3. This is multiplied with the {@link layer3Color layer's color} to get the final color for the bloom.
    see:
      - layer3Color
      - layer3BloomGreen
      - layer3BloomBlue
      - layer3BloomAlpha
  layer3BloomGreen:
    field: float
    default: 1
    desc: |
      The green value of the bloom color for layer 3. This is multiplied with the {@link layer3Color layer's color} to get the final color for the bloom.
    see:
      - layer3Color
      - layer3BloomRed
      - layer3BloomBlue
      - layer3BloomAlpha
  layer3BloomBlue:
    field: float
    default: 1
    desc: |
      The blue value of the bloom color for layer 3. This is multiplied with the {@link layer3Color layer's color} to get the final color for the bloom.
    see:
      - layer3Color
      - layer3BloomRed
      - layer3BloomGreen
      - layer3BloomAlpha
  layer3BloomAlpha:
    field: float
    default: 1
    desc: |
      The alpha value of the bloom color for layer 3. This is multiplied with the {@link layer3Color layer's color} to get the final color for the bloom.
    see:
      - layer3Color
      - layer3BloomRed
      - layer3BloomGreen
      - layer3BloomBlue
  layer4:
    field: int
    default: 0
    resource: texture
    textureType: a
    desc: |
      Layer 4 texture ID.

      This layer seems to work a bit differently from the others in Sekiro.
  layer4Width:
    type: ScalarValue
    default: 1
    scale: true
    desc: |
      Layer 4 width.
  layer4Height:
    type: ScalarValue
    default: 1
    scale: true
    desc: |
      Layer 4 height.
  layer4Color:
    type: Vector4Value
    default: [1, 1, 1, 1]
    desc: |
      Layer 4 color.
  layer4Count:
    field: int
    default: 1
    desc: |
      Number of copies of layer 4. Why this exists is unknown, they all just stack on top of each other.

      Each copy will pick its own random values for the scale variation.
    see:
      - layer4ScaleVariationX
      - layer4ScaleVariationY
  layer4ScaleVariationX:
    field: float
    default: 1
    desc: |
      The {@link layer4Width layer's width} is multiplied by a random value between this and 1.
    see:
      - layer4Count
      - layer4UniformScale
      - layer4ScaleVariationY
  layer4ScaleVariationY:
    field: float
    default: 1
    desc: |
      The {@link layer4Height layer's height} is multiplied by a random value between this and 1.
    see:
      - layer4Count
      - layer4UniformScale
      - layer4ScaleVariationX
  layer4UniformScale:
    field: bool
    default: false
    desc: |
      When enabled, the {@link layer4Width layer's width} also controls the {@link layer4Height height}, and the height property is ignored. The same is also true for the scale variation fields.
    see:
      - layer4Width
      - layer4Height
      - layer4ScaleVariationX
      - layer4ScaleVariationX
  layer4RedMultiplier:
    field: float
    default: 1
    desc: |
      Multiplier for the red value of the {@link layer4Color layer's color}.
    see:
      - layer4Color
      - layer4GreenMultiplier
      - layer4BlueMultiplier
      - layer4AlphaMultiplier
  layer4GreenMultiplier:
    field: float
    default: 1
    desc: |
      Multiplier for the green value of the {@link layer4Color layer's color}.
    see:
      - layer4Color
      - layer4RedMultiplier
      - layer4BlueMultiplier
      - layer4AlphaMultiplier
  layer4BlueMultiplier:
    field: float
    default: 1
    desc: |
      Multiplier for the blue value of the {@link layer4Color layer's color}.
    see:
      - layer4Color
      - layer4RedMultiplier
      - layer4GreenMultiplier
      - layer4AlphaMultiplier
  layer4AlphaMultiplier:
    field: float
    default: 1
    desc: |
      Multiplier for the alpha value of the {@link layer4Color layer's color}.
    see:
      - layer4Color
      - layer4RedMultiplier
      - layer4GreenMultiplier
      - layer4BlueMultiplier
  layer4BloomRed:
    field: float
    default: 1
    desc: |
      The red value of the bloom color for layer 4. This is multiplied with the {@link layer4Color layer's color} to get the final color for the bloom.
    see:
      - layer4Color
      - layer4BloomGreen
      - layer4BloomBlue
      - layer4BloomAlpha
  layer4BloomGreen:
    field: float
    default: 1
    desc: |
      The green value of the bloom color for layer 4. This is multiplied with the {@link layer4Color layer's color} to get the final color for the bloom.
    see:
      - layer4Color
      - layer4BloomRed
      - layer4BloomBlue
      - layer4BloomAlpha
  layer4BloomBlue:
    field: float
    default: 1
    desc: |
      The blue value of the bloom color for layer 4. This is multiplied with the {@link layer4Color layer's color} to get the final color for the bloom.
    see:
      - layer4Color
      - layer4BloomRed
      - layer4BloomGreen
      - layer4BloomAlpha
  layer4BloomAlpha:
    field: float
    default: 1
    desc: |
      The alpha value of the bloom color for layer 4. This is multiplied with the {@link layer4Color layer's color} to get the final color for the bloom.
    see:
      - layer4Color
      - layer4BloomRed
      - layer4BloomGreen
      - layer4BloomBlue
  blendMode:
    type: BlendMode
    field: int
    default: BlendMode.Add
    desc: |
      Blend mode.
  sourceSize:
    field: float
    default: 1
    desc: |
      Diameter of the lens flare source sphere.

      The opacity of the lens flare depends on how much of the source is in view.
  opacityTransitionDuration:
    field: float
    default: 1
    desc: |
      The time in seconds it takes for the opacity of the lens flare to transition when the source comes more into or goes more out of view.
  bloom:
    field: bool
    default: false
    desc: |
      When enabled, this allows the lens flare to have a bloom effect.

      Does not seem to work in Sekiro.
    see:
      - layer1BloomRed
      - layer1BloomGreen
      - layer1BloomBlue
      - layer1BloomAlpha
      - layer2BloomRed
      - layer2BloomGreen
      - layer2BloomBlue
      - layer2BloomAlpha
      - layer3BloomRed
      - layer3BloomGreen
      - layer3BloomBlue
      - layer3BloomAlpha
      - layer4BloomRed
      - layer4BloomGreen
      - layer4BloomBlue
      - layer4BloomAlpha
  unk_er_f1_4:
    field: int
  unk_er_f1_8:
    field: int
  unk_er_f1_17:
    field: int
  unk_er_f1_18:
    field: float
  unk_er_f1_19:
    field: float
    default: 1
  unk_er_f1_20:
    field: float
    default: -1
  unk_er_f1_29:
    field: int
  unk_er_f1_30:
    field: float
  unk_er_f1_31:
    field: float
    default: 1
  unk_er_f1_32:
    field: float
    default: -1
  unk_er_f1_41:
    field: int
  unk_er_f1_42:
    field: float
  unk_er_f1_43:
    field: float
    default: 1
  unk_er_f1_44:
    field: float
    default: -1
  unk_er_f1_53:
    field: int
  unk_er_f1_54:
    field: float
  unk_er_f1_55:
    field: float
    default: 1
  unk_er_f1_56:
    field: float
    default: -1
  unk_er_f1_57:
    field: int
  unk_er_f2_0:
    field: int
  unk_er_f2_1:
    field: int
  unk_er_f2_2:
    field: int
  unk_er_f2_3:
    field: int
  unk_er_f2_4:
    field: int
  unk_er_f2_5:
    field: int
  unk_er_f2_6:
    field: int
  unk_er_f2_7:
    field: int
  unk_er_f2_8:
    field: int
  unk_er_f2_9:
    field: int
  unk_er_f2_10:
    field: int
  unk_er_f2_11:
    field: int
  unk_er_f2_12:
    field: int
  unk_er_f2_13:
    field: int
  unk_er_f2_14:
    field: int
  unk_er_f2_15:
    field: int
  unk_er_f2_16:
    field: int
  unk_er_f2_17:
    field: int
  unk_er_f2_18:
    field: int
  unk_er_f2_19:
    field: int
  unk_er_f2_20:
    field: int
  unk_er_f2_21:
    field: int
  unk_er_f2_22:
    field: int
  unk_er_f2_23:
    field: int
  unk_er_f2_24:
    field: int
  unk_er_f2_25:
    field: int
  unk_er_f2_26:
    field: int
  unk_er_f2_27:
    field: int
  unk_er_f2_28:
    field: int
  unk_er_f2_29:
    field: int
  unk_er_f2_31:
    field: int
  unk_er_f2_32:
    field: int
  unk_er_f2_33:
    field: int
  unk_er_f2_34:
    field: int
  unk_er_f2_35:
    field: int
  unk_er_f2_36:
    field: int
    default: -2
  unk_ac6_f1_75:
    field: float
    default: -1
  unk_ac6_f1_76:
    field: float
    default: -1
  unk_ac6_f1_77:
    field: float
    default: -1
  unk_ac6_f1_78:
    field: float
    default: -1
  unk_ac6_f1_79:
    field: float
    default: -1
  unk_ac6_f1_80:
    field: float
    default: -1
games:
  SDT: ER # This action works in Sekiro, but it's not used in vanilla
  ER:
    fields1:
      - layer1
      - layer2
      - layer3
      - layer4
      - blendMode
      - unk_er_f1_4
      - sourceSize
      - opacityTransitionDuration
      - unk_er_f1_8
      - layer1Count
      - layer1ScaleVariationX
      - layer1ScaleVariationY
      - layer1UniformScale
      - layer1RedMultiplier
      - layer1GreenMultiplier
      - layer1BlueMultiplier
      - layer1AlphaMultiplier
      - unk_er_f1_17
      - unk_er_f1_18
      - unk_er_f1_19
      - unk_er_f1_20
      - layer2Count
      - layer2ScaleVariationX
      - layer2ScaleVariationY
      - layer2UniformScale
      - layer2RedMultiplier
      - layer2GreenMultiplier
      - layer2BlueMultiplier
      - layer2AlphaMultiplier
      - unk_er_f1_29
      - unk_er_f1_30
      - unk_er_f1_31
      - unk_er_f1_32
      - layer3Count
      - layer3ScaleVariationX
      - layer3ScaleVariationY
      - layer3UniformScale
      - layer3RedMultiplier
      - layer3GreenMultiplier
      - layer3BlueMultiplier
      - layer3AlphaMultiplier
      - unk_er_f1_41
      - unk_er_f1_42
      - unk_er_f1_43
      - unk_er_f1_44
      - layer4Count
      - layer4ScaleVariationX
      - layer4ScaleVariationY
      - layer4UniformScale
      - layer4RedMultiplier
      - layer4GreenMultiplier
      - layer4BlueMultiplier
      - layer4AlphaMultiplier
      - unk_er_f1_53
      - unk_er_f1_54
      - unk_er_f1_55
      - unk_er_f1_56
      - unk_er_f1_57
      - bloom
      - layer1BloomRed
      - layer1BloomGreen
      - layer1BloomBlue
      - layer1BloomAlpha
      - layer2BloomRed
      - layer2BloomGreen
      - layer2BloomBlue
      - layer2BloomAlpha
      - layer3BloomRed
      - layer3BloomGreen
      - layer3BloomBlue
      - layer3BloomAlpha
      - layer4BloomRed
      - layer4BloomGreen
      - layer4BloomBlue
      - layer4BloomAlpha
    fields2:
      - unk_er_f2_0
      - unk_er_f2_1
      - unk_er_f2_2
      - unk_er_f2_3
      - unk_er_f2_4
      - unk_er_f2_5
      - unk_er_f2_6
      - unk_er_f2_7
      - unk_er_f2_8
      - unk_er_f2_9
      - unk_er_f2_10
      - unk_er_f2_11
      - unk_er_f2_12
      - unk_er_f2_13
      - unk_er_f2_14
      - unk_er_f2_15
      - unk_er_f2_16
      - unk_er_f2_17
      - unk_er_f2_18
      - unk_er_f2_19
      - unk_er_f2_20
      - unk_er_f2_21
      - unk_er_f2_22
      - unk_er_f2_23
      - unk_er_f2_24
      - unk_er_f2_25
      - unk_er_f2_25
      - unk_er_f2_26
      - unk_er_f2_27
      - unk_er_f2_28
      - unk_er_f2_29
      - unk_er_f2_31
      - unk_er_f2_32
      - unk_er_f2_33
      - unk_er_f2_34
      - unk_er_f2_35
      - unk_er_f2_36
    properties1:
      - layer1Width
      - layer1Height
      - layer1Color
      - layer2Width
      - layer2Height
      - layer2Color
      - layer3Width
      - layer3Height
      - layer3Color
      - layer4Width
      - layer4Height
      - layer4Color
  AC6:
    fields1:
      - layer1
      - layer2
      - layer3
      - layer4
      - blendMode
      - unk_er_f1_4
      - sourceSize
      - opacityTransitionDuration
      - unk_er_f1_8
      - layer1Count
      - layer1ScaleVariationX
      - layer1ScaleVariationY
      - layer1UniformScale
      - layer1RedMultiplier
      - layer1GreenMultiplier
      - layer1BlueMultiplier
      - layer1AlphaMultiplier
      - unk_er_f1_17
      - unk_er_f1_18
      - unk_er_f1_19
      - unk_er_f1_20
      - layer2Count
      - layer2ScaleVariationX
      - layer2ScaleVariationY
      - layer2UniformScale
      - layer2RedMultiplier
      - layer2GreenMultiplier
      - layer2BlueMultiplier
      - layer2AlphaMultiplier
      - unk_er_f1_29
      - unk_er_f1_30
      - unk_er_f1_31
      - unk_er_f1_32
      - layer3Count
      - layer3ScaleVariationX
      - layer3ScaleVariationY
      - layer3UniformScale
      - layer3RedMultiplier
      - layer3GreenMultiplier
      - layer3BlueMultiplier
      - layer3AlphaMultiplier
      - unk_er_f1_41
      - unk_er_f1_42
      - unk_er_f1_43
      - unk_er_f1_44
      - layer4Count
      - layer4ScaleVariationX
      - layer4ScaleVariationY
      - layer4UniformScale
      - layer4RedMultiplier
      - layer4GreenMultiplier
      - layer4BlueMultiplier
      - layer4AlphaMultiplier
      - unk_er_f1_53
      - unk_er_f1_54
      - unk_er_f1_55
      - unk_er_f1_56
      - unk_er_f1_57
      - bloom
      - layer1BloomRed
      - layer1BloomGreen
      - layer1BloomBlue
      - layer1BloomAlpha
      - layer2BloomRed
      - layer2BloomGreen
      - layer2BloomBlue
      - layer2BloomAlpha
      - layer3BloomRed
      - layer3BloomGreen
      - layer3BloomBlue
      - layer3BloomAlpha
      - layer4BloomRed
      - layer4BloomGreen
      - layer4BloomBlue
      - layer4BloomAlpha
      - unk_ac6_f1_75
      - unk_ac6_f1_76
      - unk_ac6_f1_77
      - unk_ac6_f1_78
      - unk_ac6_f1_79
      - unk_ac6_f1_80
    fields2: ER
    properties1: ER
