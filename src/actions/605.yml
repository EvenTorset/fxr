type: 605
name: Model
slot: Appearance
meta:
  isAppearance: true
  isParticle: true
desc: |
  Particle with a 3D model.

  Some models don't work properly with this action for some reason. For example, the Carian greatsword model in Elden Ring (88300), gets horribly stretched and distorted when used with this action. If you find a model like this that you want to use, try using the {@link ActionType.RichModel RichModel action} instead.
properties:
  model:
    type: ScalarValue
    field: int
    default: 80201
    argument: Constant0
    resource: model
    desc: |
      Model ID.
  sizeX:
    type: ScalarValue
    default: 1
    argument: ParticleAge
    scale: true
    desc: |
      The width of the particle.

      If {@link uniformScale} is enabled, this also controls the height and depth.
    see:
      - scaleVariationX
      - sizeY
      - sizeZ
  sizeY:
    type: ScalarValue
    default: 1
    argument: ParticleAge
    scale: true
    desc: |
      The height of the particle.

      If {@link uniformScale} is enabled, {@link sizeX} also controls the height, and this property is ignored.
    see:
      - scaleVariationY
      - sizeX
      - sizeZ
  sizeZ:
    type: ScalarValue
    default: 1
    argument: ParticleAge
    scale: true
    desc: |
      The depth of the particle.

      If {@link uniformScale} is enabled, {@link sizeX} also controls the depth, and this property is ignored.
    see:
      - scaleVariationZ
      - sizeX
      - sizeY
  rotationX:
    type: ScalarValue
    argument: Constant0
    desc: |
      Rotation around the X-axis in degrees.
    see:
      - angularSpeedX
      - angularSpeedMultiplierX
  rotationY:
    type: ScalarValue
    argument: Constant0
    desc: |
      Rotation around the Y-axis in degrees.
    see:
      - angularSpeedY
      - angularSpeedMultiplierY
  rotationZ:
    type: ScalarValue
    argument: Constant0
    desc: |
      Rotation around the Z-axis in degrees.
    see:
      - angularSpeedZ
      - angularSpeedMultiplierZ
  angularSpeedX:
    type: ScalarValue
    argument: ParticleAge
    time: true
    desc: |
      Angular speed around the X-axis in degrees per second.
    see:
      - rotationX
      - angularSpeedMultiplierX
  angularSpeedMultiplierX:
    type: ScalarValue
    default: 1
    argument: ParticleAge
    desc: |
      Multiplier for {@link angularSpeedX}.
    see:
      - rotationX
  angularSpeedY:
    type: ScalarValue
    argument: ParticleAge
    time: true
    desc: |
      Angular speed around the Y-axis in degrees per second.
    see:
      - rotationY
      - angularSpeedMultiplierY
  angularSpeedMultiplierY:
    type: ScalarValue
    default: 1
    argument: ParticleAge
    desc: |
      Multiplier for {@link angularSpeedY}.
    see:
      - rotationY
  angularSpeedZ:
    type: ScalarValue
    argument: ParticleAge
    time: true
    desc: |
      Angular speed around the Z-axis in degrees per second.
    see:
      - rotationZ
      - angularSpeedMultiplierZ
  angularSpeedMultiplierZ:
    type: ScalarValue
    default: 1
    argument: ParticleAge
    desc: |
      Multiplier for {@link angularSpeedZ}.
    see:
      - rotationZ
  blendMode:
    type: BlendMode | ScalarProperty
    field: int
    enum: BlendMode
    default: BlendMode.Normal
    argument: Constant0
    desc: |
      Blend mode.

      Note that the materials used by the model may affect how the different blend modes work. Don't expect the blend modes to always work exactly like they do in other types of instances.
  color1:
    type: Vector4Value
    components: 4
    default: [1, 1, 1, 1]
    argument: ParticleAge
    color: true
    desc: |
      Color multiplier.

      Values in this will be clamped to the 0-1 range. To use values outside of this range, see {@link color3}.
    see:
      - color2
      - color3
  color2:
    type: Vector4Value
    components: 4
    default: [1, 1, 1, 1]
    argument: EmissionTime
    color: true
    desc: |
      Color multiplier.

      Values in this will be clamped to the 0-1 range. There is no equivalent property with unrestricted values based on the emission time of the particle, but {@link color3} is still multiplicative with this and can be used to scale the values indirectly.
    see:
      - color1
      - color3
  color3:
    type: Vector4Value
    components: 4
    default: [1, 1, 1, 1]
    argument: ParticleAge
    color: true
    desc: |
      Color multiplier.

      Values in this are unrestricted and can go above 1. If you want values to be clamped to the 0-1 range, see {@link color1}.
    see:
      - color1
      - color2
  unk_ds3_p1_15:
    type: ScalarValue
  frameIndex:
    type: ScalarValue
    argument: ParticleAge
    desc: |
      The index of the frame to show from the texture atlas. Can be animated using a {@link PropertyFunction.Linear linear property} or similar.

      Seemingly identical to {@link frameIndexOffset}? The sum of these two properties is the actual frame index that gets used.
  frameIndexOffset:
    type: ScalarValue
    argument: ParticleAge
    desc: |
      Seemingly identical to {@link frameIndex}? The sum of these two properties is the actual frame index that gets used.
  offsetU:
    type: ScalarValue
    default: 0
    argument: Constant0
    desc: |
      Horizontal offset for the UV coordinates of the model.

      If the texture is an animation sheet that is split up into multiple frames using {@link columns} and/or {@link totalFrames}, this property has no effect.
    see:
      - speedU
      - offsetV
  offsetV:
    type: ScalarValue
    default: 0
    argument: Constant0
    desc: |
      Vertical offset for the UV coordinates of the model.

      If the texture is an animation sheet that is split up into multiple frames using {@link columns} and/or {@link totalFrames}, this property has no effect.
  speedU:
    type: ScalarValue
    default: 0
    argument: ParticleAge
    time: true
    desc: |
      Horiztonal scroll speed for the model's texture.

      If the texture is an animation sheet that is split up into multiple frames using {@link columns} and/or {@link totalFrames}, this property has no effect.
    see:
      - speedMultiplierU
      - offsetU
  speedMultiplierU:
    type: ScalarValue
    default: 0
    argument: ParticleAge
    desc: |
      Multiplier for {@link speedU}.
  speedV:
    type: ScalarValue
    default: 0
    argument: ParticleAge
    time: true
    desc: |
      Vertical scroll speed for the model's texture.

      If the texture is an animation sheet that is split up into multiple frames using {@link columns} and/or {@link totalFrames}, this property has no effect.
    see:
      - speedMultiplierV
      - offsetV
  speedMultiplierV:
    type: ScalarValue
    default: 0
    argument: ParticleAge
    desc: |
      Multiplier for {@link speedV}.
  unk_ds3_p1_24:
    type: ScalarValue
  rgbMultiplier:
    type: ScalarValue
    default: 1
    argument: ActiveTime
    desc: |
      Scalar multiplier for the color that does not affect the alpha. Effectively a brightness multiplier.
  alphaMultiplier:
    type: ScalarValue
    default: 1
    argument: ActiveTime
    desc: |
      Alpha multiplier.
  unk_ds3_p2_2:
    type: ScalarValue
  unk_ds3_p2_3:
    type: Vector4Value
    components: 4
    default: [1, 1, 1, 1]
  unk_ds3_p2_4:
    type: Vector4Value
    components: 4
    default: [1, 1, 1, 1]
  unk_ds3_p2_5:
    type: Vector4Value
    components: 4
    default: [1, 1, 1, 1]
  unk_ds3_p2_6:
    type: ScalarValue
  unk_ds3_p2_7:
    type: ScalarValue
  orientation:
    type: ModelOrientationMode
    field: int
    enum: ModelOrientationMode
    default: ModelOrientationMode.ParticleDirection
    desc: |
      Model orientation mode. See {@link ModelOrientationMode} for more information.
  scaleVariationX:
    field: float
    default: 1
    desc: |
      Each particle will pick a random number between this value and 1, and the width of the particle will be multiplied by this number. For example, setting this to 0.5 will make the particles randomly thinner, down to half width. Setting it to 2 will make them randomly wider, up to double width.

      If {@link uniformScale} is enabled, this also affects the height.
    see:
      - scaleVariationY
      - scaleVariationZ
  scaleVariationY:
    field: float
    default: 1
    desc: |
      Each particle will pick a random number between this value and 1, and the height of the particle will be multiplied by this number. For example, setting this to 0.5 will make the particles randomly shorter, down to half height. Setting it to 2 will make them randomly taller, up to double height.

      If {@link uniformScale} is enabled, {@link scaleVariationX} also affects the height, and this field is ignored.
    see:
      - scaleVariationX
      - scaleVariationZ
  scaleVariationZ:
    field: float
    default: 1
    desc: |
      Each particle will pick a random number between this value and 1, and the depth of the particle will be multiplied by this number. For example, setting this to 0.5 will make the particles randomly shallower, down to half depth. Setting it to 2 will make them randomly deeper, up to double depth. 

      If {@link uniformScale} is enabled, {@link scaleVariationX} also affects the depth, and this field is ignored.
    see:
      - scaleVariationX
      - scaleVariationY
  uniformScale:
    field: bool
    default: false
    desc: |
      If enabled, the particle X scale-related properties and fields will control the scale in all axes, and the Y and Z counterparts will be ignored.
    see:
      - sizeX
      - sizeY
      - sizeZ
      - scaleVariationX
      - scaleVariationY
      - scaleVariationZ
  columns:
    field: int
    default: 1
    desc: |
      To split the texture into multiple animation frames, this value must be set to the number of columns in the texture. It should equal `textureWidth / frameWidth`.
    see:
      - totalFrames
  totalFrames:
    field: int
    default: 1
    desc: |
      To split the texture into multiple animation frames, this value must be set to the total number of frames in the texture.
    see:
      - columns
  unk_ds3_f1_9:
    field: int
    default: -2
  unk_ds3_f1_10:
    field: int
    default: -2
  unk_ds3_f1_11:
    field: bool
    default: true
  unk_ds3_f1_12:
    field: bool
    default: true
  unk_ds3_f1_13:
    field: int
    default: 1
  anibnd:
    field: int
    resource: anibnd
    desc: |
      Anibnd ID.
    see:
      - animation
      - loopAnimation
      - animationSpeed
  animation:
    field: int
    desc: |
      Controls which animation in the {@link anibnd} to play.
    see:
      - anibnd
      - loopAnimation
      - animationSpeed
  loopAnimation:
    field: bool
    default: true
    desc: |
      If disabled, the {@link animation} will only play once and then freeze on the last frame. If enabled, the animation will loop.
    see:
      - anibnd
      - animation
      - animationSpeed
  animationSpeed:
    field: float
    default: 1
    time: true
    desc: |
      Controls the speed at which the {@link animation} plays.
    see:
      - anibnd
      - animation
      - loopAnimation
  unk_ds3_f1_18:
    field: int
  unk_er_f1_17:
    field: int
    default: 1
  unk_er_f1_18:
    field: int
    default: 1
  unk_er_f1_19:
    field: int
  unk_ds3_f2_0:
    field: int
  unk_ds3_f2_1:
    field: int
  unk_ds3_f2_2:
    field: int
    default: 8
  unk_ds3_f2_3:
    field: int
  unk_ds3_f2_4:
    field: int
    default: 1
  bloomColor:
    field: vec4
    components: 4
    default: [1, 1, 1, 0]
    color: true
    desc: |
      Controls the color of the additional bloom effect. The colors of the particle will be multiplied with this color to get the final color of the bloom effect.

      Note:
      - This has no effect if the "Effects Quality" setting is set to "Low".
      - This does not affect the natural bloom effect from high color values.
  unk_ds3_f2_9:
    field: float
  unk_ds3_f2_10:
    field: int
  unk_ds3_f2_11:
    field: int
  unk_ds3_f2_12:
    field: int
  unk_ds3_f2_13:
    field: int
  minFadeDistance:
    field: float
    default: -1
    scale: distanceIfNotMinusOne
    desc: |
      This controls a point where the opacity of a particle will start to fade to 0 near the {@link minDistance minimum view distance}. At {@link minDistance}, the opacity will be 0, and it will linearly approach 1 as the distance between the camera and the particle approaches this distance.

      This requires {@link minDistance} to be set to a positive value or 0. This distance limit can be disabled by setting this and minDistance to -1.
    see:
      - minDistance
      - maxFadeDistance
      - maxDistance
      - minDistanceThreshold
      - maxDistanceThreshold
  minDistance:
    field: float
    default: -1
    scale: distanceIfNotMinusOne
    desc: |
      Minimum view distance. If a particle is closer than this distance from the camera, it will be hidden. Can be set to -1 to disable the limit.

      This requires {@link minFadeDistance} to be set to a positive value or 0.

      This is different from {@link minDistanceThreshold}, as this controls the start of a distance range that has smooth transitions at each end, while the threshold value is a hard cut-off.
    see:
      - minFadeDistance
      - maxFadeDistance
      - maxDistance
      - minDistanceThreshold
      - maxDistanceThreshold
  maxFadeDistance:
    field: float
    default: -1
    scale: distanceIfNotMinusOne
    desc: |
      This controls a point where the opacity of a particle will start to fade to 0 near the {@link maxDistance maximum view distance}. At {@link maxDistance}, the opacity will be 0, and it will linearly approach 1 as the distance between the camera and the particle approaches this distance.

      This requires {@link maxDistance} to be set to a positive value or 0. This distance limit can be disabled by setting this and minDistance to -1.
    see:
      - minFadeDistance
      - minDistance
      - maxDistance
      - minDistanceThreshold
      - maxDistanceThreshold
  maxDistance:
    field: float
    default: -1
    scale: distanceIfNotMinusOne
    desc: |
      Minimum view distance. If a particle is farther away than this distance from the camera, it will be hidden. Can be set to -1 to disable the limit.

      This requires {@link maxFadeDistance} to be set to a positive value or 0.

      This is different from {@link maxDistanceThreshold}, as this controls the start of a distance range that has smooth transitions at each end, while the threshold value is a hard cut-off.
    see:
      - minFadeDistance
      - minDistance
      - maxFadeDistance
      - minDistanceThreshold
      - maxDistanceThreshold
  minDistanceThreshold:
    field: float
    default: -1
    scale: distanceIfNotMinusOne
    desc: |
      A hard cut-off point for the distance between the camera and the particle. If a particle is closer than this distance from the camera, it will be hidden. Can be set to -1 to disable the limit.
    see:
      - minFadeDistance
      - minDistance
      - maxFadeDistance
      - maxDistance
      - maxDistanceThreshold
  maxDistanceThreshold:
    field: float
    default: -1
    scale: distanceIfNotMinusOne
    desc: |
      A hard cut-off point for the distance between the camera and the particle. If a particle is farther away than this distance from the camera, it will be hidden. Can be set to -1 to disable the limit.
    see:
      - minFadeDistance
      - minDistance
      - maxFadeDistance
      - maxDistance
      - minDistanceThreshold
  unk_ds3_f2_20:
    field: float
  unk_ds3_f2_21:
    field: int
  unk_ds3_f2_22:
    field: int
  unk_ds3_f2_23:
    field: int
  unk_ds3_f2_24:
    field: float
  unkDepthBlend1:
    field: float
    default: 1
  unkDepthBlend2:
    field: float
    scale: distance
  unk_ds3_f2_26:
    field: int
    default: 1
  unk_ds3_f2_27:
    field: int
  unk_sdt_f2_29:
    field: float
  unk_sdt_f2_30:
    field: float
  unk_sdt_f2_31:
    field: int
  unk_sdt_f2_32:
    field: int
    desc: |
      Unknown integer.

      When set to 1, it can cause some ugly "outline" effects on things seen through particles.
  unk_sdt_f2_33:
    field: int
  unk_sdt_f2_34:
    field: float
  unk_sdt_f2_35:
    field: int
    default: -2
  unk_sdt_f2_36:
    field: int
    default: -2
  unk_sdt_f2_37:
    field: int
  unk_ac6_f2_38:
    field: int
  unk_ds3_f2_28:
    field: float
games:
  DS3:
    fields1:
      - orientation
      - model
      - scaleVariationX
      - scaleVariationY
      - scaleVariationZ
      - uniformScale
      - blendMode
      - columns
      - totalFrames
      - unk_ds3_f1_9
      - unk_ds3_f1_10
      - unk_ds3_f1_11
      - unk_ds3_f1_12
      - unk_ds3_f1_13
      - anibnd
      - animation
      - loopAnimation
      - animationSpeed
      - unk_ds3_f1_18
    fields2:
      - unk_ds3_f2_0
      - unk_ds3_f2_1
      - unk_ds3_f2_2
      - unk_ds3_f2_3
      - unk_ds3_f2_4
      - bloomColor
      #
      #
      #
      - unk_ds3_f2_9
      - unk_ds3_f2_10
      - unk_ds3_f2_11
      - unk_ds3_f2_12
      - unk_ds3_f2_13
      - minFadeDistance
      - minDistance
      - maxFadeDistance
      - maxDistance
      - minDistanceThreshold
      - maxDistanceThreshold
      - unk_ds3_f2_20
      - unk_ds3_f2_21
      - unk_ds3_f2_22
      - unk_ds3_f2_23
      - unkDepthBlend1
      - unkDepthBlend2
      - unk_ds3_f2_26
      - unk_ds3_f2_27
      - unk_ds3_f2_28
    properties1:
      - sizeX
      - sizeY
      - sizeZ
      - rotationX
      - rotationY
      - rotationZ
      - angularSpeedX
      - angularSpeedMultiplierX
      - angularSpeedY
      - angularSpeedMultiplierY
      - angularSpeedZ
      - angularSpeedMultiplierZ
      - color1
      - color2
      - color3
      - unk_ds3_p1_15
      - frameIndex
      - frameIndexOffset
      - offsetU
      - offsetV
      - speedU
      - speedMultiplierU
      - speedV
      - speedMultiplierV
      - unk_ds3_p1_24
    properties2:
      - rgbMultiplier
      - alphaMultiplier
      - unk_ds3_p2_2
      - unk_ds3_p2_3
      - unk_ds3_p2_4
      - unk_ds3_p2_5
      - unk_ds3_p2_6
      - unk_ds3_p2_7
  SDT:
    fields1:
      - orientation
      - scaleVariationX
      - scaleVariationY
      - scaleVariationZ
      - uniformScale
      - columns
      - totalFrames
      - unk_ds3_f1_9
      - unk_ds3_f1_10
      - unk_ds3_f1_11
      - unk_ds3_f1_12
      - unk_ds3_f1_13
      - anibnd
      - animation
      - loopAnimation
      - animationSpeed
      - unk_ds3_f1_18
    fields2:
      - unk_ds3_f2_0
      - unk_ds3_f2_1
      - unk_ds3_f2_2
      - unk_ds3_f2_3
      - unk_ds3_f2_4
      - bloomColor
      #
      #
      #
      - unk_ds3_f2_9
      - unk_ds3_f2_10
      - unk_ds3_f2_11
      - unk_ds3_f2_12
      - unk_ds3_f2_13
      - minFadeDistance
      - minDistance
      - maxFadeDistance
      - maxDistance
      - minDistanceThreshold
      - maxDistanceThreshold
      - unk_ds3_f2_20
      - unk_ds3_f2_21
      - unk_ds3_f2_22
      - unk_ds3_f2_23
      - unk_ds3_f2_24
      - unkDepthBlend1
      - unkDepthBlend2
      - unk_ds3_f2_26
      - unk_ds3_f2_27
      - unk_sdt_f2_29
      - unk_sdt_f2_30
      - unk_sdt_f2_31
      - unk_sdt_f2_32
      - unk_sdt_f2_33
      - unk_sdt_f2_34
      - unk_sdt_f2_35
      - unk_sdt_f2_36
      - unk_sdt_f2_37
    properties1:
      - model
      - sizeX
      - sizeY
      - sizeZ
      - rotationX
      - rotationY
      - rotationZ
      - angularSpeedX
      - angularSpeedMultiplierX
      - angularSpeedY
      - angularSpeedMultiplierY
      - angularSpeedZ
      - angularSpeedMultiplierZ
      - blendMode
      - color1
      - color2
      - color3
      - unk_ds3_p1_15
      - frameIndex
      - frameIndexOffset
      - offsetU
      - offsetV
      - speedU
      - speedMultiplierU
      - speedV
      - speedMultiplierV
      - unk_ds3_p1_24
    properties2:
      - rgbMultiplier
      - alphaMultiplier
      - unk_ds3_p2_2
      - unk_ds3_p2_3
      - unk_ds3_p2_4
      - unk_ds3_p2_5
      - unk_ds3_p2_6
  ER:
    fields1:
      - orientation
      - scaleVariationX
      - scaleVariationY
      - scaleVariationZ
      - uniformScale
      - columns
      - totalFrames
      - unk_ds3_f1_9
      - unk_ds3_f1_10
      - unk_ds3_f1_11
      - unk_ds3_f1_12
      - unk_ds3_f1_13
      - anibnd
      - animation
      - loopAnimation
      - animationSpeed
      - unk_ds3_f1_18
      - unk_er_f1_17
      - unk_er_f1_18
      - unk_er_f1_19
    fields2: SDT
    properties1: SDT
    properties2: SDT
  AC6:
    fields1: ER
    fields2:
      - unk_ds3_f2_0
      - unk_ds3_f2_1
      - unk_ds3_f2_2
      - unk_ds3_f2_3
      - unk_ds3_f2_4
      - bloomColor
      #
      #
      #
      - unk_ds3_f2_9
      - unk_ds3_f2_10
      - unk_ds3_f2_11
      - unk_ds3_f2_12
      - unk_ds3_f2_13
      - minFadeDistance
      - minDistance
      - maxFadeDistance
      - maxDistance
      - minDistanceThreshold
      - maxDistanceThreshold
      - unk_ds3_f2_20
      - unk_ds3_f2_21
      - unk_ds3_f2_22
      - unk_ds3_f2_23
      - unk_ds3_f2_24
      - unkDepthBlend1
      - unkDepthBlend2
      - unk_ds3_f2_26
      - unk_ds3_f2_27
      - unk_sdt_f2_29
      - unk_sdt_f2_30
      - unk_sdt_f2_31
      - unk_sdt_f2_32
      - unk_sdt_f2_33
      - unk_sdt_f2_34
      - unk_sdt_f2_35
      - unk_sdt_f2_36
      - unk_sdt_f2_37
      - unk_ac6_f2_38
    properties1: SDT
    properties2: SDT
