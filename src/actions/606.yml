type: 606
name: Tracer
slot: Appearance
meta:
  isAppearance: true
  isParticle: true
desc: |
  Creates a trail behind moving effects.
properties:
  texture:
    type: ScalarValue
    field: int
    default: 1
    argument: Constant0
    resource: texture
    textureType: a
    desc: |
      Texture ID.
  blendMode:
    type: BlendMode | ScalarProperty
    field: int
    enum: BlendMode
    default: BlendMode.Normal
    argument: Constant0
    desc: |
      Blend mode.
  width:
    type: ScalarValue
    default: 1
    argument: ParticleAge
    scale: true
    desc: |
      The width of the trail.
  widthMultiplier:
    type: ScalarValue
    default: 1
    argument: EmissionTime
    desc: |
      Multiplier for {@link width}.
  startFadeEndpoint:
    type: ScalarValue
    argument: ParticleAge
    desc: |
      Percentage along the trail from the start of the trail where the trail's opacity will start fading out towards the start. The trail will have 0 opacity at the start, and it will linearly increase towards full opacity at the point represented by this percentage.

      The percentage is of the way from the start of the trail to the end of it, so if the trail gets longer or shorter, this point will move with it.

      Values greater than 100 will make the trail never reach full opacity. For example, a value of 200 will make the trail fade from 0 opacity at the start to 50% (100% / 200%) at the end of the trail.

      If this value and {@link endFadeEndpoint} sum to a value greater than 100, the trail will be "split" at the point controlled by this value and each part will fade separately based on the repsective value. For example, if this is set to 50 and {@link endFadeEndpoint} is 1000, the first half of the trail will fade normally from 0 opacity at the start to full opacity at the mid point, but the other half will fade from 5% opacity ((100% - 50%) / 1000%) at the mid point to 0 at the end. Where the two parts meet, the opacity will fade from one to the other across a single segment of the trail.
  endFadeEndpoint:
    type: ScalarValue
    argument: ParticleAge
    desc: |
      Percentage along the trail from the end of the trail where the trail's opacity will start fading out towards the end. The trail will have full opacity at the point represented by this percentage, and it will linearly decrease towards 0 opacity at the end.

      The percentage is of the way from the end of the trail to the start of it, so if the trail gets longer or shorter, this point will move with it.

      Values greater than 100 will make the trail never reach full opacity. For example, a value of 200 will make the trail fade from 0 opacity at the end to 50% (100% / 200%) at the start of the trail.

      If this value and {@link startFadeEndpoint} sum to a value greater than 100, the trail will be "split" at the point controlled by {@link startFadeEndpoint} and each part will fade separately based on the repsective value. For example, if {@link startFadeEndpoint} is set to 50 and this is 1000, the first half of the trail will fade normally from 0 opacity at the start to full opacity at the mid point, but the other half will fade from 5% opacity ((100% - 50%) / 1000%) at the mid point to 0 at the end. Where the two parts meet, the opacity will fade from one to the other across a single segment of the trail.
  color1:
    type: Vector4Value
    components: 4
    default: [1, 1, 1, 1]
    argument: ParticleAge
    color: true
    desc: |
      Color multiplier.

      Values in this will be clamped to the 0-1 range. To use values outside of this range, see {@link color3}.
    see:
      - color2
      - color3
  color2:
    type: Vector4Value
    components: 4
    default: [1, 1, 1, 1]
    argument: EmissionTime
    color: true
    desc: |
      Color multiplier.

      Values in this will be clamped to the 0-1 range. There is no equivalent property with unrestricted values based on the emission time of the particle, but {@link color3} is still multiplicative with this and can be used to scale the values indirectly.
    see:
      - color1
      - color3
  color3:
    type: Vector4Value
    components: 4
    default: [1, 1, 1, 1]
    argument: ParticleAge
    color: primary
    desc: |
      Color multiplier.

      Values in this are unrestricted and can go above 1. If you want values to be clamped to the 0-1 range, see {@link color1}.
    see:
      - color1
      - color2
  alphaFadeThreshold:
    type: ScalarValue
    argument: ParticleAge
    desc: |
      Parts of the particle with less opacity than this threshold will be invisible. The range is 0-255.

      Values above this threshold will be stretched to fill the alpha range, so values near the threshold will be less visible, creating a smooth transition between the parts that have been hidden by the threshold and the ones that are still visible.
  frameIndex:
    type: ScalarValue
    argument: ParticleAge
    desc: |
      The index of the frame to show from the texture atlas. Can be animated using a {@link PropertyFunction.Linear linear property} or similar.

      Seemingly identical to {@link frameIndexOffset}? The sum of these two properties is the actual frame index that gets used.
  frameIndexOffset:
    type: ScalarValue
    argument: ParticleAge
    desc: |
      Seemingly identical to {@link frameIndex}? The sum of these two properties is the actual frame index that gets used.
  textureFraction:
    type: ScalarValue
    default: 0.1
    argument: ParticleAge
    desc: |
      Controls how much of the texture's width is used per segment. If {@link attachedUV} is enabled, this instead controls how much of the texture's width to use for the entire trail.
  speedU:
    type: ScalarValue
    argument: ParticleAge
    time: true
    desc: |
      Controls how fast the UV coordinates should move horizontally.
  varianceV:
    type: ScalarValue
    argument: ParticleAge
    desc: |
      Controls how much the UV coordinates should be randomly offset by per segment.
  unk_ds3_p1_13:
    type: ScalarValue
    default: -1
  rgbMultiplier:
    type: ScalarValue
    default: 1
    argument: ActiveTime
    desc: |
      Scalar multiplier for the color that does not affect the alpha. Effectively a brightness multiplier.
  alphaMultiplier:
    type: ScalarValue
    default: 1
    argument: ActiveTime
    desc: |
      Alpha multiplier.
  distortionIntensity:
    type: ScalarValue
    argument: ActiveTime
    desc: |
      Controls the intensity of the distortion effect. At 0, there is no distortion at all.
    see:
      - normalMap
  unk_ds3_p2_3:
    type: Vector4Value
    components: 4
    default: [1, 1, 1, 1]
  unk_ds3_p2_4:
    type: Vector4Value
    components: 4
    default: [1, 1, 1, 1]
  unk_ds3_p2_5:
    type: Vector4Value
    components: 4
    default: [1, 1, 1, 1]
  alphaThreshold:
    type: ScalarValue
    argument: ActiveTime
    desc: |
      Parts of the particle with less opacity than this threshold will be invisible. The range is 0-255.

      This threshold creates a hard cut-off between visible and not visible, which is unlike the {@link alphaFadeThreshold}.
  orientation:
    type: TracerOrientationMode
    field: int
    enum: TracerOrientationMode
    default: TracerOrientationMode.LocalZ
    desc: |
      Tracer orientation mode. See {@link TracerOrientationMode} for more information.
  normalMap:
    field: int
    default: 0
    resource: texture
    textureType: 'n'
    desc: |
      Normal map texture ID.

      This is used to control the distortion effect of the trail.
    see:
      - distortionIntensity
  segmentInterval:
    field: float
    default: 0
    time: inv
    desc: |
      The trail is made up of multiple quads, or *segments*. This controls how many seconds to wait between new segments being created. Lower values produce a smoother trail.
  segmentDuration:
    field: float
    default: 1
    time: inv
    desc: |
      The trail is made up of multiple quads, or *segments*. This controls how long each segment should last in seconds.
  concurrentSegments:
    field: int
    default: 100
    desc: |
      The trail is made up of multiple quads, or *segments*. This controls how many segments may exist at the same time.
  segmentSubdivision:
    field: int
    desc: |
      The trail is made up of multiple quads, or *segments*. This controls how many times each completed segment should be subdivided. Higher values makes the trail look smoother.

      A "completed" segment is any segment that is not the leading one. The leading segment has one side attached to the end of the previous segment and the other attached to the tracer source, and is always a simple quad.
  unk_ds3_f1_8:
    field: float
  fadeOutTime:
    field: float
    desc: |
      When the particle is meant to terminate, the trail will linger for this many seconds and its opacity will fade to 0 in that time.
  columns:
    field: int
    default: 1
    desc: |
      To split the texture into multiple animation frames, this value must be set to the number of columns in the texture. It should equal `textureWidth / frameWidth`.
    see:
      - totalFrames
  totalFrames:
    field: int
    default: 1
    desc: |
      To split the texture into multiple animation frames, this value must be set to the total number of frames in the texture.
    see:
      - columns
  attachedUV:
    field: bool
    default: true
    desc: |
      Controls whether or not the UV of the trail should be attached to the node or not. If it is attached, the texture will slide along the segments to follow the source wherever it moves, as if it was a flag attached to a pole. If it is not attached, the texture will stay where it was when the segment was created, like a skid mark on a road where the road is the segments and the mark is the texture, it wouldn't follow the car/node that made it.
  unk_ds3_f1_13:
    field: int
    default: -1
  unk_ds3_f1_14:
    field: int
    default: -1
  unk_ds3_f1_15:
    field: int
  unk_er_f1_14:
    field: int
    default: 1
  unk_er_f1_15:
    field: int
    default: 1
  unk_er_f1_16:
    field: int
  unk_ds3_f2_0:
    field: int
  unk_ds3_f2_1:
    field: int
    desc: |
      Unknown integer. Possibly boolean?
  unk_ds3_f2_2:
    field: int
    default: 8
  unk_ds3_f2_3:
    field: int
  bloom:
    field: bool
    default: true
    desc: |
      Controls whether or not the particles have an additional bloom effect controlled by {@link bloomColor}.

      Note:
      - This has no effect if the "Effects Quality" setting is set to "Low".
      - This does not affect the natural bloom effect from high color values.
    see:
      - bloomColor
  bloomColor:
    field: vec4
    components: 4
    default: [1, 1, 1, 0]
    color: true
    desc: |
      Controls the color of the additional bloom effect. The colors of the particle will be multiplied with this color to get the final color of the bloom effect.

      Note:
      - This has no effect if the "Effects Quality" setting is set to "Low".
      - This does not affect the natural bloom effect from high color values.
    see:
      - bloom
  unk_ds3_f2_9:
    field: float
  unk_ds3_f2_10:
    field: int
  unk_ds3_f2_11:
    field: int
  unk_ds3_f2_12:
    field: int
  unk_ds3_f2_13:
    field: int
  minFadeDistance:
    field: float
    default: -1
    scale: distanceIfNotMinusOne
    desc: |
      This controls a point where the opacity of a particle will start to fade to 0 near the {@link minDistance minimum view distance}. At {@link minDistance}, the opacity will be 0, and it will linearly approach 1 as the distance between the camera and the particle approaches this distance.

      This requires {@link minDistance} to be set to a positive value or 0. This distance limit can be disabled by setting this and minDistance to -1.
    see:
      - minDistance
      - maxFadeDistance
      - maxDistance
      - minDistanceThreshold
      - maxDistanceThreshold
  minDistance:
    field: float
    default: -1
    scale: distanceIfNotMinusOne
    desc: |
      Minimum view distance. If a particle is closer than this distance from the camera, it will be hidden. Can be set to -1 to disable the limit.

      This requires {@link minFadeDistance} to be set to a positive value or 0.

      This is different from {@link minDistanceThreshold}, as this controls the start of a distance range that has smooth transitions at each end, while the threshold value is a hard cut-off.
    see:
      - minFadeDistance
      - maxFadeDistance
      - maxDistance
      - minDistanceThreshold
      - maxDistanceThreshold
  maxFadeDistance:
    field: float
    default: -1
    scale: distanceIfNotMinusOne
    desc: |
      This controls a point where the opacity of a particle will start to fade to 0 near the {@link maxDistance maximum view distance}. At {@link maxDistance}, the opacity will be 0, and it will linearly approach 1 as the distance between the camera and the particle approaches this distance.

      This requires {@link maxDistance} to be set to a positive value or 0. This distance limit can be disabled by setting this and minDistance to -1.
    see:
      - minFadeDistance
      - minDistance
      - maxDistance
      - minDistanceThreshold
      - maxDistanceThreshold
  maxDistance:
    field: float
    default: -1
    scale: distanceIfNotMinusOne
    desc: |
      Minimum view distance. If a particle is farther away than this distance from the camera, it will be hidden. Can be set to -1 to disable the limit.

      This requires {@link maxFadeDistance} to be set to a positive value or 0.

      This is different from {@link maxDistanceThreshold}, as this controls the start of a distance range that has smooth transitions at each end, while the threshold value is a hard cut-off.
    see:
      - minFadeDistance
      - minDistance
      - maxFadeDistance
      - minDistanceThreshold
      - maxDistanceThreshold
  minDistanceThreshold:
    field: float
    default: -1
    scale: distanceIfNotMinusOne
    desc: |
      A hard cut-off point for the distance between the camera and the particle. If a particle is closer than this distance from the camera, it will be hidden. Can be set to -1 to disable the limit.
    see:
      - minFadeDistance
      - minDistance
      - maxFadeDistance
      - maxDistance
      - maxDistanceThreshold
  maxDistanceThreshold:
    field: float
    default: -1
    scale: distanceIfNotMinusOne
    desc: |
      A hard cut-off point for the distance between the camera and the particle. If a particle is farther away than this distance from the camera, it will be hidden. Can be set to -1 to disable the limit.
    see:
      - minFadeDistance
      - minDistance
      - maxFadeDistance
      - maxDistance
      - minDistanceThreshold
  unk_ds3_f2_20:
    field: int
  unk_ds3_f2_21:
    field: int
  unk_ds3_f2_22:
    field: int
  unk_ds3_f2_23:
    field: int
  unk_ds3_f2_24:
    field: int
  unkDepthBlend1:
    field: float
    default: 1
  unkDepthBlend2:
    field: float
    scale: distance
  unk_ds3_f2_27:
    field: int
    default: 1
  unk_ds3_f2_28:
    field: int
  unk_ds3_f2_29:
    field: float
    scale: distance
    desc: |
      Unknown float.

      This seems to be some sort of distance threshold. When the camera is within this distance, some things will look different in some ways. For example, when within the distance and the {@link blendMode blend mode} is set to {@link BlendMode.Subtract}, the opacity doesn't work the way it normally does. Other effects have been found as well, but what exactly this threshold is for is unknown.
  shadowDarkness:
    field: float
    desc: |
      Controls how dark shaded parts of the trail are.
  unk_sdt_f2_31:
    field: int
  unk_sdt_f2_32:
    field: int
    desc: |
      Unknown integer.

      When set to 1, it seems to stop {@link unk_ds3_f2_29} from doing whatever it is doing, and it can also cause some ugly "outline" effects on things seen through particles.
  specular:
    field: int
    resource: texture
    textureType: 3m
    desc: |
      Specular texture ID.
    see:
      - lighting
      - glossiness
      - specularity
  glossiness:
    field: float
    default: 0.25
    desc: |
      Controls how sharp the specular highlights are.
    see:
      - lighting
      - specular
      - specularity
  lighting:
    field: int
    enum: LightingMode
    default: LightingMode.Unlit
    desc: |
      Controls how the trail is lit. See {@link LightingMode} for more information.
  unk_sdt_f2_36:
    field: int
    default: -2
  unk_sdt_f2_37:
    field: int
  specularity:
    field: float
    default: 0.5
    desc: |
      Controls how bright the specular highlights are.
    see:
      - lighting
      - specular
      - glossiness
  unk_er_f2_39:
    field: int
games:
  DS3:
    fields1:
      - orientation
      - texture
      - normalMap
      - blendMode
      - segmentInterval
      - segmentDuration
      - concurrentSegments
      - segmentSubdivision
      - unk_ds3_f1_8
      - fadeOutTime
      - columns
      - totalFrames
      - attachedUV
      - unk_ds3_f1_13
      - unk_ds3_f1_14
      - unk_ds3_f1_15
    fields2:
      - unk_ds3_f2_0
      - unk_ds3_f2_1
      - unk_ds3_f2_2
      - unk_ds3_f2_3
      - bloom
      - bloomColor
      #
      #
      #
      - unk_ds3_f2_9
      - unk_ds3_f2_10
      - unk_ds3_f2_11
      - unk_ds3_f2_12
      - unk_ds3_f2_13
      - minFadeDistance
      - minDistance
      - maxFadeDistance
      - maxDistance
      - minDistanceThreshold
      - maxDistanceThreshold
      - unk_ds3_f2_20
      - unk_ds3_f2_21
      - unk_ds3_f2_22
      - unk_ds3_f2_23
      - unk_ds3_f2_24
      - unkDepthBlend1
      - unkDepthBlend2
      - unk_ds3_f2_27
      - unk_ds3_f2_28
      - unk_ds3_f2_29
    properties1:
      - width
      - widthMultiplier
      - startFadeEndpoint
      - endFadeEndpoint
      - color1
      - color2
      - color3
      - alphaFadeThreshold
      - frameIndex
      - frameIndexOffset
      - textureFraction
      - speedU
      - varianceV
      - unk_ds3_p1_13
    properties2:
      - rgbMultiplier
      - alphaMultiplier
      - distortionIntensity
      - unk_ds3_p2_3
      - unk_ds3_p2_4
      - unk_ds3_p2_5
      - alphaThreshold
  SDT:
    fields1:
      - orientation
      - normalMap
      - segmentInterval
      - segmentDuration
      - concurrentSegments
      - segmentSubdivision
      - unk_ds3_f1_8
      - fadeOutTime
      - columns
      - totalFrames
      - attachedUV
      - unk_ds3_f1_13
      - unk_ds3_f1_14
      - unk_ds3_f1_15
    fields2:
      - unk_ds3_f2_0
      - unk_ds3_f2_1
      - unk_ds3_f2_2
      - unk_ds3_f2_3
      - bloom
      - bloomColor
      #
      #
      #
      - unk_ds3_f2_9
      - unk_ds3_f2_10
      - unk_ds3_f2_11
      - unk_ds3_f2_12
      - unk_ds3_f2_13
      - minFadeDistance
      - minDistance
      - maxFadeDistance
      - maxDistance
      - minDistanceThreshold
      - maxDistanceThreshold
      - unk_ds3_f2_20
      - unk_ds3_f2_21
      - unk_ds3_f2_22
      - unk_ds3_f2_23
      - unk_ds3_f2_24
      - unkDepthBlend1
      - unkDepthBlend2
      - unk_ds3_f2_27
      - unk_ds3_f2_28
      - unk_ds3_f2_29
      - shadowDarkness
      - unk_sdt_f2_31
      - unk_sdt_f2_32
      - specular
      - glossiness
      - lighting
      - unk_sdt_f2_36
      - unk_sdt_f2_37
      - specularity
    properties1:
      - texture
      - blendMode
      - width
      - widthMultiplier
      - startFadeEndpoint
      - endFadeEndpoint
      - color1
      - color2
      - color3
      - alphaFadeThreshold
      - frameIndex
      - frameIndexOffset
      - textureFraction
      - speedU
      - varianceV
      - unk_ds3_p1_13
    properties2: DS3
  ER:
    fields1:
      - orientation
      - normalMap
      - segmentInterval
      - segmentDuration
      - concurrentSegments
      - segmentSubdivision
      - unk_ds3_f1_8
      - fadeOutTime
      - columns
      - totalFrames
      - attachedUV
      - unk_ds3_f1_13
      - unk_ds3_f1_14
      - unk_ds3_f1_15
      - unk_er_f1_14
      - unk_er_f1_15
      - unk_er_f1_16
    fields2:
      - unk_ds3_f2_0
      - unk_ds3_f2_1
      - unk_ds3_f2_2
      - unk_ds3_f2_3
      - bloom
      - bloomColor
      #
      #
      #
      - unk_ds3_f2_9
      - unk_ds3_f2_10
      - unk_ds3_f2_11
      - unk_ds3_f2_12
      - unk_ds3_f2_13
      - minFadeDistance
      - minDistance
      - maxFadeDistance
      - maxDistance
      - minDistanceThreshold
      - maxDistanceThreshold
      - unk_ds3_f2_20
      - unk_ds3_f2_21
      - unk_ds3_f2_22
      - unk_ds3_f2_23
      - unk_ds3_f2_24
      - unkDepthBlend1
      - unkDepthBlend2
      - unk_ds3_f2_27
      - unk_ds3_f2_28
      - unk_ds3_f2_29
      - shadowDarkness
      - unk_sdt_f2_31
      - unk_sdt_f2_32
      - specular
      - glossiness
      - lighting
      - unk_sdt_f2_36
      - unk_sdt_f2_37
      - specularity
      - unk_er_f2_39
    properties1: SDT
    properties2: DS3
  AC6: ER
