type: 600
name: PointSprite
slot: Appearance
meta:
  isAppearance: true
  isParticle: true
desc: |
  Very basic point sprite particle. Similar to {@link ActionType.BillboardEx BillboardEx}, but far simpler.
properties:
  texture:
    type: ScalarValue
    field: int
    default: 1
    argument: Constant0
    resource: texture
    textureType: a
    desc: |
      Texture ID.
  blendMode:
    type: BlendMode | ScalarProperty
    field: int
    enum: BlendMode
    default: BlendMode.Normal
    argument: Constant0
    desc: |
      Blend mode.
  size:
    type: ScalarValue
    default: 1
    argument: ParticleAge
    scale: true
    desc: |
      Particle size.
  color1:
    type: Vector4Value
    components: 4
    default: [1, 1, 1, 1]
    argument: ParticleAge
    color: true
    desc: |
      Color multiplier.

      Values in this will be clamped to the 0-1 range. To use values outside of this range, see {@link color3}.
    see:
      - color2
      - color3
  color2:
    type: Vector4Value
    components: 4
    default: [1, 1, 1, 1]
    argument: EmissionTime
    color: true
    desc: |
      Color multiplier.

      Values in this will be clamped to the 0-1 range. There is no equivalent property with unrestricted values based on the emission time of the particle, but {@link color3} is still multiplicative with this and can be used to scale the values indirectly.
    see:
      - color1
      - color3
  color3:
    type: Vector4Value
    components: 4
    default: [1, 1, 1, 1]
    argument: ParticleAge
    color: true
    desc: |
      Color multiplier.

      Values in this are unrestricted and can go above 1. If you want values to be clamped to the 0-1 range, see {@link color1}.
    see:
      - color1
      - color2
  rgbMultiplier:
    type: ScalarValue
    default: 1
    argument: ActiveTime
    desc: |
      Scalar multiplier for the color that does not affect the alpha. Effectively a brightness multiplier.
  alphaMultiplier:
    type: ScalarValue
    default: 1
    argument: ActiveTime
    desc: |
      Alpha multiplier.
  unk_ds3_p2_2:
    type: ScalarValue
    default: 0
  unk_ds3_p2_3:
    type: Vector4Value
    components: 4
    default: [1, 1, 1, 1]
  unk_ds3_p2_4:
    type: Vector4Value
    components: 4
    default: [1, 1, 1, 1]
  unk_ds3_p2_5:
    type: Vector4Value
    components: 4
    default: [1, 1, 1, 1]
  alphaThreshold:
    type: ScalarValue
    argument: ActiveTime
    desc: |
      Parts of the particle with less opacity than this threshold will be invisible. The range is 0-255.

      This threshold creates a hard cut-off between visible and not visible, which is unlike the alpha *fade* threshold properties in some similar actions.
  unk_ds3_f1_2:
    field: int
    default: -2
  unk_ds3_f1_3:
    field: int
    default: -2
  unk_ds3_f1_4:
    field: int
    default: 0
  unk_er_f1_3:
    field: int
    default: 1
  unk_er_f1_4:
    field: int
    default: 1
  unk_ds3_f2_0:
    field: int
    default: 0
  unk_ds3_f2_1:
    field: int
    default: 0
  unk_ds3_f2_2:
    field: int
    default: 8
  unk_ds3_f2_3:
    field: int
    default: 0
  bloom:
    field: bool
    default: true
    desc: |
      Controls whether or not the particles have an additional bloom effect controlled by {@link bloomColor}.

      Note:
      - This has no effect if the "Effects Quality" setting is set to "Low".
      - This does not affect the natural bloom effect from high color values.
    see:
      - bloomColor
  bloomColor:
    field: vec4
    components: 4
    default: [1, 1, 1, 0]
    color: true
    desc: |
      Controls the color of the additional bloom effect. The colors of the particle will be multiplied with this color to get the final color of the bloom effect.

      Note:
      - This has no effect if the "Effects Quality" setting is set to "Low".
      - This does not affect the natural bloom effect from high color values.
    see:
      - bloom
  unk_ds3_f2_9:
    field: float
  unk_ds3_f2_10:
    field: int
    default: 0
  unk_ds3_f2_11:
    field: int
    default: 0
  unk_ds3_f2_12:
    field: int
    default: 0
  unk_ds3_f2_13:
    field: int
    default: 0
  minFadeDistance:
    field: float
    default: -1
    scale: distanceIfNotMinusOne
    desc: |
      This controls a point where the opacity of a particle will start to fade to 0 near the {@link minDistance minimum view distance}. At {@link minDistance}, the opacity will be 0, and it will linearly approach 1 as the distance between the camera and the particle approaches this distance.

      This requires {@link minDistance} to be set to a positive value or 0. This distance limit can be disabled by setting this and minDistance to -1.
    see:
      - minDistance
      - maxFadeDistance
      - maxDistance
      - minDistanceThreshold
      - maxDistanceThreshold
  minDistance:
    field: float
    default: -1
    scale: distanceIfNotMinusOne
    desc: |
      Minimum view distance. If a particle is closer than this distance from the camera, it will be hidden. Can be set to -1 to disable the limit.

      This requires {@link minFadeDistance} to be set to a positive value or 0.

      This is different from {@link minDistanceThreshold}, as this controls the start of a distance range that has smooth transitions at each end, while the threshold value is a hard cut-off.
    see:
      - minFadeDistance
      - maxFadeDistance
      - maxDistance
      - minDistanceThreshold
      - maxDistanceThreshold
  maxFadeDistance:
    field: float
    default: -1
    scale: distanceIfNotMinusOne
    desc: |
      This controls a point where the opacity of a particle will start to fade to 0 near the {@link maxDistance maximum view distance}. At {@link maxDistance}, the opacity will be 0, and it will linearly approach 1 as the distance between the camera and the particle approaches this distance.

      This requires {@link maxDistance} to be set to a positive value or 0. This distance limit can be disabled by setting this and minDistance to -1.
    see:
      - minFadeDistance
      - minDistance
      - maxDistance
      - minDistanceThreshold
      - maxDistanceThreshold
  maxDistance:
    field: float
    default: -1
    scale: distanceIfNotMinusOne
    desc: |
      Minimum view distance. If a particle is farther away than this distance from the camera, it will be hidden. Can be set to -1 to disable the limit.

      This requires {@link maxFadeDistance} to be set to a positive value or 0.

      This is different from {@link maxDistanceThreshold}, as this controls the start of a distance range that has smooth transitions at each end, while the threshold value is a hard cut-off.
    see:
      - minFadeDistance
      - minDistance
      - maxFadeDistance
      - minDistanceThreshold
      - maxDistanceThreshold
  minDistanceThreshold:
    field: float
    default: -1
    scale: distanceIfNotMinusOne
    desc: |
      A hard cut-off point for the distance between the camera and the particle. If a particle is closer than this distance from the camera, it will be hidden. Can be set to -1 to disable the limit.
    see:
      - minFadeDistance
      - minDistance
      - maxFadeDistance
      - maxDistance
      - maxDistanceThreshold
  maxDistanceThreshold:
    field: float
    default: -1
    scale: distanceIfNotMinusOne
    desc: |
      A hard cut-off point for the distance between the camera and the particle. If a particle is farther away than this distance from the camera, it will be hidden. Can be set to -1 to disable the limit.
    see:
      - minFadeDistance
      - minDistance
      - maxFadeDistance
      - maxDistance
      - minDistanceThreshold
  unk_ds3_f2_20:
    field: int
    default: 0
  unk_ds3_f2_21:
    field: int
    default: 0
  unk_ds3_f2_22:
    field: int
    default: 0
  unk_ds3_f2_23:
    field: int
    default: 0
  unk_ds3_f2_24:
    field: int
    default: 0
  unkDepthBlend1:
    field: float
    default: 1
  unkDepthBlend2:
    field: float
    scale: distance
    default: 0
  unk_ds3_f2_27:
    field: int
    default: 0
  unk_ds3_f2_28:
    field: int
    default: 0
  unk_ds3_f2_29:
    field: float
  unk_sdt_f2_30:
    field: float
  unk_sdt_f2_31:
    field: int
    default: 0
  unk_sdt_f2_32:
    field: int
    desc: |
      Unknown integer.

      When set to 1, it seems to stop {@link unk_ds3_f2_29} from doing whatever it is doing, and it can also cause some ugly "outline" effects on things seen through particles.
  unk_sdt_f2_33:
    field: int
    default: 0
  unk_sdt_f2_34:
    field: float
    default: 0
  unk_sdt_f2_35:
    field: int
    default: -1
  unk_sdt_f2_36:
    field: int
    default: -2
  unk_sdt_f2_37:
    field: int
    default: 0
  unk_sdt_f2_38:
    field: int
    default: 0
  unk_er_f2_39:
    field: int
    default: 0
games:
  DS3:
    fields1:
      - texture
      - blendMode
      - unk_ds3_f1_2
      - unk_ds3_f1_3
      - unk_ds3_f1_4
    fields2:
      - unk_ds3_f2_0
      - unk_ds3_f2_1
      - unk_ds3_f2_2
      - unk_ds3_f2_3
      - bloom
      - bloomColor
      #
      #
      #
      - unk_ds3_f2_9
      - unk_ds3_f2_10
      - unk_ds3_f2_11
      - unk_ds3_f2_12
      - unk_ds3_f2_13
      - minFadeDistance
      - minDistance
      - maxFadeDistance
      - maxDistance
      - minDistanceThreshold
      - maxDistanceThreshold
      - unk_ds3_f2_20
      - unk_ds3_f2_21
      - unk_ds3_f2_22
      - unk_ds3_f2_23
      - unk_ds3_f2_24
      - unkDepthBlend1
      - unkDepthBlend2
      - unk_ds3_f2_27
      - unk_ds3_f2_28
      - unk_ds3_f2_29
    properties1:
      - size
      - color1
      - color2
      - color3
    properties2:
      - rgbMultiplier
      - alphaMultiplier
      - unk_ds3_p2_2
      - unk_ds3_p2_3
      - unk_ds3_p2_4
      - unk_ds3_p2_5
      - alphaThreshold
  SDT:
    fields1:
      - unk_ds3_f1_2
      - unk_ds3_f1_3
      - unk_ds3_f1_4
    fields2:
      - unk_ds3_f2_0
      - unk_ds3_f2_1
      - unk_ds3_f2_2
      - unk_ds3_f2_3
      - bloom
      - bloomColor
      #
      #
      #
      - unk_ds3_f2_9
      - unk_ds3_f2_10
      - unk_ds3_f2_11
      - unk_ds3_f2_12
      - unk_ds3_f2_13
      - minFadeDistance
      - minDistance
      - maxFadeDistance
      - maxDistance
      - minDistanceThreshold
      - maxDistanceThreshold
      - unk_ds3_f2_20
      - unk_ds3_f2_21
      - unk_ds3_f2_22
      - unk_ds3_f2_23
      - unk_ds3_f2_24
      - unkDepthBlend1
      - unkDepthBlend2
      - unk_ds3_f2_27
      - unk_ds3_f2_28
      - unk_ds3_f2_29
      - unk_sdt_f2_30
      - unk_sdt_f2_31
      - unk_sdt_f2_32
      - unk_sdt_f2_33
      - unk_sdt_f2_34
      - unk_sdt_f2_35
      - unk_sdt_f2_36
      - unk_sdt_f2_37
      - unk_sdt_f2_38
    properties1:
      - texture
      - blendMode
      - size
      - color1
      - color2
      - color3
    properties2: DS3
  ER:
    fields1:
      - unk_ds3_f1_2
      - unk_ds3_f1_3
      - unk_ds3_f1_4
      - unk_er_f1_3
      - unk_er_f1_4
    fields2:
      - unk_ds3_f2_0
      - unk_ds3_f2_1
      - unk_ds3_f2_2
      - unk_ds3_f2_3
      - bloom
      - bloomColor
      #
      #
      #
      - unk_ds3_f2_9
      - unk_ds3_f2_10
      - unk_ds3_f2_11
      - unk_ds3_f2_12
      - unk_ds3_f2_13
      - minFadeDistance
      - minDistance
      - maxFadeDistance
      - maxDistance
      - minDistanceThreshold
      - maxDistanceThreshold
      - unk_ds3_f2_20
      - unk_ds3_f2_21
      - unk_ds3_f2_22
      - unk_ds3_f2_23
      - unk_ds3_f2_24
      - unkDepthBlend1
      - unkDepthBlend2
      - unk_ds3_f2_27
      - unk_ds3_f2_28
      - unk_ds3_f2_29
      - unk_sdt_f2_30
      - unk_sdt_f2_31
      - unk_sdt_f2_32
      - unk_sdt_f2_33
      - unk_sdt_f2_34
      - unk_sdt_f2_35
      - unk_sdt_f2_36
      - unk_sdt_f2_37
      - unk_sdt_f2_38
      - unk_er_f2_39
    properties1: SDT
    properties2: DS3
  AC6: ER
